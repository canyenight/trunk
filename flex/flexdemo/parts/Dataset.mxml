<?xml version="1.0" encoding="utf-8"?>
<CmdPanel xmlns="parts.*" xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" creationComplete="init();">
<mx:Script>
	<![CDATA[
	import mx.containers.Canvas;
   	import mx.rpc.events.*;
   	import commands.CommandProcessor;
   	import mx.events.ListEvent;
   	import mx.controls.Alert;

	private var ts_:Number;
	private var dbToken_:String;
	private var curDataset_:int;
	private var sets_:Array;
	private var cols_:Array;
	
		override public function set cmdProcessor(value:CommandProcessor):void
		{
			super.cmdProcessor = value;
			connectToHost();
		}

		public function get selDBToken():String
		{
			return dbToken_;
		}
		
		public function connectToHost():void
		{
			cmdProc.processCommand("demos&token=" + getToken());
		}

        override protected function onAnswerReceived(event:ResultEvent):void
        {	           
            if (event.result.answer.action == "demos")
            {
            	sets_ = event.result.answer.categories.category.source as Array;
            	addCategories(sets_);
            	askForNewDataset(null);
            }
            else if (event.result.answer.action == "getdataset")
            {
            	cols_ = event.result.answer.dataset.column.source as Array;
            	columns.dataProvider = cols_;
            	chartIt();
            }

        }
        
		private function init():void
		{
			ts_ = new Date().time;
		}
		
		private function getToken(): String 
		{
			ts_ ++;
			var ts:String = new String(ts_);
			return ts;
		}
	
        // event fired when a dataset categ has been selected
        private function askForNewDataset(event:Event):void 
        {
			dbToken_ = getToken();
			// get list
			var list:List = (List)( (Canvas)(categories.getChildAt(categories.selectedIndex) ).getChildAt(0));
			curDataset_ = list.dataProvider[list.selectedIndex].idx;
			cmdProc.processCommand( "getdataset&token=" + dbToken_ + "&dataset=" + curDataset_);
	    }

        private function addCategoryCanvas(cat:Object):Canvas
        {
        	var canvas:Canvas = new Canvas();
        	canvas.percentWidth = 100;
        	canvas.percentHeight = 100;
        	canvas.label = cat.name;
        	var list:List = new List();
        	list.dataProvider=cat.datasets.dataset;
	        list.labelField = "name";
        	list.percentWidth = 100;
        	list.percentHeight = 100;
        	list.selectedIndex = 0;
        	canvas.addChild(list);
        	list.addEventListener(ListEvent.ITEM_CLICK,askForNewDataset);
        	return canvas;
        }
        
        
		private function addCategories(cats:Object):void
		{
            for (var i:Number = 0; i < cats.length; i++)
            {	        	
	        	categories.addChild(addCategoryCanvas(cats[i]));
            }
		}
		
		public function chartIt():void 
		{
			// collect the data
            var len:int = cols_.length;
            var sContext:String = "";
            var iSelected:int = 0;
            var iDimCount:int = 0;
            var iMesCount:int = 0;
            for (var i:int = 0; i < len; i++) 
            {
            	if (cols_[i].selected == true)
            	{
            		sContext += "&c" + iSelected + "=";
            		sContext += cols_[i].idx;
            		sContext += "&t" + iSelected + "=";
            		if (cols_[i].dim == true)
            		{
            			sContext += "dim";
            			iDimCount++;
            		}
            		else
            		{
            			sContext += cols_[i].sl;
            			if (cols_[i].sl == "dim")
	            			iDimCount++;
	            		else
	            			iMesCount++;
            		}
            		iSelected++;
            	}
            }
            if ((iMesCount > 0) && (iDimCount > 0))
            {				
				cmdProc.processCommand("chartit&token=" + this.selDBToken + sContext + "&dataset=" + curDataset_);
			}
            else
				Alert.show( "Please select at least one dimension and one measure.", "Alert...", Alert.OK);
		}
		
		private function unselectAll():void
		{
            for (var i:int = 0; i < cols_.length; i++) 
            {
            	cols_[i].selected = false;
            }
		}
		
	]]>
</mx:Script>

 	<mx:VDividedBox width="100%" height="100%">
	    <mx:Accordion id="categories" width="100%" height="45%" change="askForNewDataset(event)" />
	    <mx:List itemRenderer="renderer.ColumDetail"  width="100%" height="55%" id="columns" />	
 	</mx:VDividedBox>
	<mx:Button label="Unselect All" click="unselectAll()"/>
	<mx:Button label="Render" click="chartIt()"/>
</CmdPanel>
