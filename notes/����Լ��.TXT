学生：学号，姓名，年龄、专业
课程：课程编号、课程名、任课教师的编号、上课时间、上课地点
选课：选课记录的编号，学号、课程号、成绩
教师：教师编号、姓名、院系
专业：专业名、院系

1.主键约束 PRIMARY KEY
2.外键约束 REFERENCES ST(SNO)
3.唯一约束 UNIPUE
4.非空约束 NOT NULL
5.检查约束 CHECK(SA>18)
6.默认约束 DEFAULT 'COMPUTER'

数据的完整性：
identity(seed,increment); uniqueidentifier;

CREATE DATABASE SCT;

CREATE TABLE ST
(	SNO INTEGER PRIMARY KEY,
	SNAME CHAR(20) NOT NULL,
	SA INTEGER NOT NULL,
	SUB CHAR(20) NOT NULL
)
INSERT INTO ST VALUES(1001,'MXD',21,'MACHINE');
INSERT INTO ST VALUES(1002,'FH',22,'COMPUTER');
INSERT INTO ST VALUES(1003,'SR',221,'PHYSICS');
INSERT INTO ST VALUES(1004,'GLL',21,'CHEMISTRY');


CREATE TABLE C
(
  CNO INT PRIMARY KEY,
  SNAME VARCHAR(20) NOT NULL,
  TNO INT NOT NULL,
  CTIME TIME,
  PLACE VARCHAR(20)
);
INSERT INTO C VALUES(002,'DATABASE',02,'2006-1-1','NJU');
INSERT INTO C VALUES(003,'ORACLE',05,'2006-1-1','SEU');
INSERT INTO C VALUES(004,'IBMDB2',04,'2006-1-1','THU');
INSERT INTO C VALUES(005,'MYSQL',06,'2006-1-1','PKU');


CREATE TABLE SC
(
  SCNO INT PRIMARY KEY,
  SNO INT,
  CNO INT,
  GRADE SMALLINT
);
INSERT INTO SC VALUES(00001,1001,002,NULL);
INSERT INTO SC VALUES(00002,1001,005,NULL);
INSERT INTO SC VALUES(00003,1001,004,NULL);
INSERT INTO SC VALUES(00004,1001,003,NULL);

ALTER TABLE SC 
ADD FOREIGN KEY(SNO) REFERENCES ST(SNO);
ALTER TABLE SC 
ADD FOREIGN KEY(CNO) REFERENCES C(CNO);  


CREATE TABLE T
(
  TNO INT PRIMARY KEY,
  TNAME VARCHAR(20) NOT NULL,
  DEPT VARCHAR(20) NOT NULL
);
INSERT INTO T VALUES(01,'ZHANG','COMPUTER');
INSERT INTO T VALUES(02,'XU','MACHINE');
INSERT INTO T VALUES(03,'MA','EE');

CREATE TABLE SB
( 
  SUB VARCHAR(20) PRIMARY KEY,  
  DEPT VARCHAR(20)
);  
INSERT INTO SB VALUES('NETWORK','COMPUTER');
INSERT INTO SB VALUES('DATABASE','COMPUTER');
INSERT INTO SB VALUES('DIP','COMPUTER');

**********************************************
SELECT * FROM C;
SELECT CNO FROM C WHERE TNO=4;
SELECT * FROM C ORDER BY TNO; 查询课程表中所有的信息，并以TNO排序。

DELETE FROM C WHERE TNO=4;
SELECT * FROM C WHERE SNAME LIKE 'NET%';
UPDATA C SET CNO=032 WHERE SNAME  LIKE 'NET%';

DML: DELETE UPDATE INSERT SELECT
STASTICS: SUM AVG COUNT MAX MIN
LIKE: %任意长字符 _单个字符 这是SQL的标准
你把把他们相应的改成*,?
若不以A打头，且第三个为P，LIKE '[^A]_P%'