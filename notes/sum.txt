1. heroku
- git init/add ./commit/push
- shh-keygen -t ras/das
- .gems: rails --version 2.2.2
- git push git@heroku.com:myblog.git master
- git clone git@heroku.com:myblog.git, pull, commit, push
- heroku create mydepot, info/logs --app mydepot
- git push git@heroku.com:myblog.git master

2. wensite
- http://shirui.googlecode.com/svn/trunk/
- http://shirui.dreamhosters.com: shiruide@gmail.com 67
- http://roamer.heroku.com/os/gadget.xml
- https://www.changeip.com:cnshirui@67
- http://github.com/shirui/shirui/tree/master
- 上海汇深环保仪器公司: http://1622.900y.net/, http://huishen.changeip.net/
- http://cn.5944.net:cnshirui@67
- http://9817.vrvr.net:9817@67, valid until 4.12
- http://shirui.web.xinme.com:shirui@fofu2u
- http://web93131016.w1.web335.net.cn:cnshirui@67, valid until 2009-06-13.
- http://www.9929.net:cnshirui@67
- http://1622.900y.net:1622@777777
- http://www.mianfeizhuji.cn/

3. campus.roamer
- http://www.tianya.cn/index.htm?vitem=http%3A%2F%2Fsandbox.tianya.cn%3A80%2Fsandbox%2Fpreview.jsp%3FappId%
3D1235824543530
- http://apps.xiaonei.com/campus_roamer
- instruction: 用于浏览好友网络，发现更多好友！
校园漫步的构思来自于大学校园，运用Flex技术让使用者在交友网上看到自己的朋友，朋友的朋友，让自己能够认识到更多的朋友。初
始化时会出现当前使用者和他/她的好友，点击其中一个好友，就会出现好友的好友，右击可以浏览去主页，然后看到更详细的信息，
当然了，觉得有缘的话，可以点击主页上的”加为好友“，加这个人为好友了。
校园漫步的构思来自于大学校园，校内网就像是大学校园，我们可以漫步在校园里，找到自己的好友。运用Adode Flex/Flash技术让使
用者在交友网上看到自己的朋友，朋友的朋友，让自己能够认识到更多的朋友。初始化时会出现当前使用者和他/她的好友，点击其中
一个好友，就会出现好友的好友，右击"去主页看看"，可以浏览其个人主页。也可以到陌生的朋友主页上看到更详细的信息，当然了，
觉得有缘的话，可以点击主页上的”加为好友“，加这个人为好友了。我们可以在这个工具里双击许多人的头像，然后拖拽，可以放大缩
小头像的大小，也可以调整每个人之间的距离，移动所有人的位置，就像Google地图一样。欢迎使用，谢谢大家的支持！
该应用可以帮助使用者在校内上寻找好友，双击一个人可以看到他更多的好友，右击“GoTo Profile Page"可以去他主页看看，顺便加
他为好友哦！

4. rails
- scaffold: gem install scaffolding_extensions, generate scaffold User uid:string, name:string, image_url:string
- 2.2.2=>2.3.2: application.rb=>application_controller.rb, @_render_stack.first => @_first_render
- create database 1stlog DEFAULT CHARACTER SET utf8;

5. shanghai
- resident query: http://218.242.131.164/reg_step7read.asp, 320623198411095437, Bo123456

6. appengine
- install python 2.5.2, google_appengine
- config app.yaml
- edit helloworld.py
- run: dev_appserver.py --clear_datastore/-c --datastore_path="." helloworld/
- upload: appcfg.py update helloworld/

7. Django
- python setup.py install
- django-admin.py startproject appproject
- create main.py and app.yaml
- python manage.py startapp myapp

8. AppEngine with Eclipse
- install PyDev in Eclipse: http://pydev.sourceforge.net/updates/
- install python, config python interpreter in eclipse
- import appengine project, set python-path in project properties:
   - google_appengine
   - google_appengine\lib\django
   - google_appengine\lib\webob
   - google_appengine\lib\yaml\lib
- config run dialog
   - main module - d:\dev\google_appengine\dev_appserver.py
   - args: ${project_loc} --port=9999
