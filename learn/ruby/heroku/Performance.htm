<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" lang="en"><head>


	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<meta name="verify-v1" content="J75JQ+WGFRjBEnhNT4hhYxgVTQmRHjd0v3JF+izUFvA=">
	<title>Heroku | Performance</title>
	<link type="text/css" rel="stylesheet" href="Performance_files/docs.css" media="screen">
	<link type="text/css" rel="stylesheet" href="Performance_files/shCore.css">
	<link type="text/css" rel="stylesheet" href="Performance_files/shThemeHeroku.css">
	<script type="text/javascript" src="Performance_files/jquery-1.js"></script>
	<script type="text/javascript" src="Performance_files/shCore.js"></script>
	<script type="text/javascript" src="Performance_files/shBrushRuby.js"></script>
	<script type="text/javascript">
		$(document).ready(function() {
			SyntaxHighlighter.config.tagName = 'code'
			SyntaxHighlighter.defaults['tag'] = false;
			SyntaxHighlighter.defaults['gutter'] = false;
			SyntaxHighlighter.defaults['toolbar'] = false;
			SyntaxHighlighter.all();
		});
	</script>
</head><body>
<div id="bodywrap">

	<style type="text/css">
#header { margin: 0; padding: 0; border: 0; font-weight: inherit; font-style: inherit; font-size: 100%; font-family: arial, helvetica, sans-serif; vertical-align: baseline; margin-bottom: 15px; }

#header { background-color: #29264d; border-bottom-style: solid; border-bottom-width: 3px; border-bottom-color: #494573; overflow: hidden; display: inline-block; }
#header { display: block; }
#header a { color: #c9c3e6; text-decoration: none; font-weight: normal; }
#header a:hover { color: #fff; }
#header #logo { margin: 20px 0 15px 25px; float: left; }
#header #logo a { display: block; text-indent: -9999px; width: 177px; height: 56px; overflow: hidden; background-image: url(http://heroku.com/images/v2/logo.png); background-repeat: no-repeat; }
#header ul { list-style-type: none; overflow: hidden; display: inline-block; float: right; margin-top: 30px; padding: 10px; }
#header ul { display: block; }
#header ul li { float: left; margin-left: 10px; }
#header ul li:first-child { margin-left: 0; }
#header ul li { border-left-style: solid; border-left-width: 2px; border-left-color: #534890; padding-left: 10px; font-size: 16px; }
#header ul li:first-child, #header ul li#account_login { border: none; margin-left: 0; padding-left: 0; }
#header ul li a.active { color: #bff740; }
#header ul li a.active:hover { color: #bff740; }
#header ul.account-links { background-color: #231d40; padding-left: 15px; padding-right: 15px; margin-right: 25px; margin-left: 10px; -moz-border-radius: 7px; -webkit-border-radius: 7px; }
#header ul.account-links a { color: #45a4ff; }
#header ul.account-links a:hover { color: #74d0f4; }
#header ul.account-links a.active { color: #bff740; }
#header ul.account-links a.active:hover { color: #bff740; }

</style>


<div id="header">
	
		<h5 id="logo"><a href="http://heroku.com/">Heroku</a></h5>
	

	<ul class="account-links inline">
		<div id="logged-in-links" style="display: none;">
			<li><a href="http://heroku.com/myapps">My Apps</a></li>
			<li><a href="http://heroku.com/account">My Account</a></li>
			<li><a href="http://heroku.com/logout">Logout</a></li>
		</div>
		<li id="account_login"><a href="http://heroku.com/login">Login</a></li>
	</ul>
	<ul class="info-links inline">
		<!-- <li><a href="http://heroku.com/about">About</a></li> -->
		<li><a href="http://heroku.com/how">How it Works</a></li>
		<li><a href="http://heroku.com/pricing">Pricing</a></li>
		<!-- <li><a href="http://blog.heroku.com/">Blog</a></li> -->
		<li><a href="http://docs.heroku.com/" class="active">Docs</a></li>
		<li><a href="http://support.heroku.com/" id="support_link">Support</a></li>
	</ul>
</div>

<script type="text/javascript">
	if (document.cookie.indexOf('heroku_session=') != -1) {
		document.getElementById('support_link').href = 'http://heroku.com/helpdesk/login';
		document.getElementById('logged-in-links').style.display = 'block';
		document.getElementById('account_login').style.display = 'none';
	}
</script>



	<div id="docsnav">
		<form action="/search" id="cse-search-box">
			<div id="search">
				<input name="cx" value="011016403564345195107:s5fypn6csxi" type="hidden">
				<input name="cof" value="FORID:10;NB:1" type="hidden">
				<input name="ie" value="UTF-8" type="hidden">
				<input style="border: 1px solid rgb(126, 157, 185); padding: 2px; background: rgb(255, 255, 255) url(http://www.google.com/coop/intl/en/images/google_custom_search_watermark.gif) no-repeat scroll left center; -moz-background-clip: border; -moz-background-origin: padding; -moz-background-inline-policy: continuous;" name="q" size="31" type="text">
			</div>
		<input value="14d5058e-f79f-0935-acbc-c29344a71d2a" name="vid" type="hidden"></form>

		<ul>
			
				<li>
				<h3>Getting Started</h3>
				<ul>
					
						
							<li><a href="http://docs.heroku.com/heroku">What is Heroku?</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/quickstart">Quickstart Guide</a></li>
						
					
				</ul>
				</li>
			
				<li>
				<h3>Application Management</h3>
				<ul>
					
						
							<li><a href="http://docs.heroku.com/heroku-command">Installing the Heroku command-line tool</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/creating-apps">Creating apps</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/renaming-apps">Renaming apps</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/git">Deploying with Git</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/sharing">Collaborating with others</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/gems">Managing Gems</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/taps">Database import / export</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/console">Using the console</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/rake">Running rake tasks</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/config-vars">Config vars</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/backups">Backups</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/addons">Managing Addons</a></li>
						
					
				</ul>
				</li>
			
				<li>
				<h3>Platform Features</h3>
				<ul>
					
						
							<li><a href="http://docs.heroku.com/technologies">System Infrastructure</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/dynos">Dynos</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/database">SQL Database</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/http-caching">HTTP cache</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/rack">Rack apps</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/custom-domains">Custom domains</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/ssl">SSL</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/cron">Cron</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/background-jobs">Background jobs</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/s3">Storing uploads in S3</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/smtp">Outbound email</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/full-text-indexing">Full text search indexing</a></li>
						
					
				</ul>
				</li>
			
				<li>
				<h3>Troubleshooting</h3>
				<ul>
					
						
							<li><a href="http://docs.heroku.com/constraints">Application constraints</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/logs-exceptions">Logs and exceptions</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/errors">Error pages</a></li>
						
					
						
							<li class="current"><a>Performance</a></li>
						
					
						
							<li><a href="http://docs.heroku.com/support">Getting support</a></li>
						
					
				</ul>
				</li>
			
		</ul>
	</div>

	<div id="content">
		<div class="topic_content">
			<h1>Performance</h1>



<p>Getting ideal performance out of any application is a challenging
and subtle area of study which is not well-understood by many
developers. The biggest challenge is in dividing the problem space and
understanding what actually represents ideal. When we say performance
do we mean raw speed? Latency? Concurrency? Throughput? But although
performance issues can come in many shapes and sizes, almost all of
them have the same symptom: your users complain that your site is slow.</p>

<p>Developers building apps on Heroku have the same performance
challenges that you would anywhere else. The good news is that we've
created some tools and some safeguards that help identify performance
bottlenecks, and then provide clear paths for ways that you can improve
the situation if you so choose.</p>

<a name="key-concepts"></a>


	<ul id="toc">
		
			<li><a href="#key-concepts">Key concepts</a></li>
		
			<li><a href="#backlog-too-deep">Backlog Too Deep</a></li>
		
			<li><a href="#request-timeout">Request Timeout</a></li>
		
	</ul>


<h2>Key concepts</h2>

<p><strong>Dyno</strong> – A <a href="http://heroku.com/how/dynos">dyno</a> is a single web process running on Heroku.  It is capable of serving a single web request (pageview) at a time.</p>

<p><strong>Request time</strong> – The length of time spent serving a
web request in the dyno. Request times are generally in the range of 5
– 200ms, with the average being around 50ms. Rails shows requests times
in the logs like this:</p>

<pre><code>Completed in 27ms (View: 12, DB: 3) | 200 OK [http://localhost/posts]
</code></pre>

<p><strong>Round-trip time</strong> – The time a request takes from the
browser or client app. This number includes the request time, but also
includes the time spent traversing the internet and the hops in front
of your app include Nginx and Varnish. You can test round-trip time
from your local machine like this:</p>

<pre><code>$ ab -n 1 http://myapp.heroku.com/
 ...
 Time per request:       207.189 [ms] (mean)
</code></pre>

<p><strong>Concurrency</strong> – The number of requests that can be
processed simulatneously. On Heroku, your concurrency level is exactly
equal to the number of dynos you have selected on the My Apps –&gt;
Resources page for your app.</p>

<p><strong>Throughput</strong> – Throughput is the number of requests
that can be served in a given time period. You can calculate your app’s
request-per-second throughput by dividing your concurrency (number of
dynos) by your average request time. For example, if you’re running
four dynos and have an average request time of 100ms, your maximum
throughput will be 4 / 0.100 = 40 requests per second.</p>

<p><strong>Backlog</strong> – When a web request comes in for your app, the Heroku <a href="http://heroku.com/how/architecture#routing-mesh">routing mesh</a>
looks for an available dyno. In most cases, a dyno will be ready to
take the request immediately. But if your app is getting more requests
than it can handle, all dynos may be busy, in which case the mesh has
to hold onto the request and wait for a dyno to come free. The requests
being held in this manner are stored in a queue known as a backlog.</p>

<p>Gregg Pollack has created some excellent visuals to demonstrate backlogs in <a href="http://content.newrelic.com/railslab/videos/12-ScalingRails-Jesse-Newland.mp4">this Railslab video</a>.
Jump to about 60% of the way through when he’s describing Nginx +
HAProxy. The Heroku routing mesh behaves similarly to HAProxy with
maxconn=1.</p>

<p>A brief backlog is not anything to worry about: a brief spike of
traffic may cause requests to sit in the backlog for a few hundred
milliseconds, then be forwarded onto a dyno to be processed as usual.
But if the traffic spike is not brief but in fact a longer-term
increase in traffic, a growing backlog can indicate that you may soon
need to take action.</p>

<p>Further reading: <a href="http://adam.blog.heroku.com/past/2009/6/24/backlogs_and_request_time/">Backlogs and Request Time</a></p>

<a name="backlog-too-deep"></a><h2>Backlog Too Deep</h2>

<p>If your backlog (as described above) grows too large, the routing
mesh will start turning some users away from your site with the
message: “Backlog Too Deep.”</p>

<p>If you’re using the default of one dyno, your app can only process
one request at a time. This is more than enough for a single user or a
few simultaneous users – an app which takes 100ms to process requests
can serve 10 pageviews per second. (This doesn’t count static assets or
cached pages, which are served straight from Varnish and never touch
your dyno.)</p>

<p>But imagine the case where you’re getting 15 requests per second.
Your single dyno can serve 10 per second. After one second you will
have served 10 requests but have 5 in the backlog waiting to be
processed. This would be fine if no more requests came in, as those 5
requests would be served in the next 0.5 seconds. However, if you have
another 15 requests come in, at the end of the 2nd second you’ll have 5
+ 15 – 10 = 10 requests in your backlog. After 3 seconds, the backlog
will be 15 deep, and so on.</p>

<p>If that volume keeps up, the backlog will keep getting deeper.
Eventually, the Heroku routing mesh will detect that you’re
increasingly behind, and start turning away some of the requests.</p>

<p>When you are facing this situation, you have three options:</p>

<ul>
<li>Increase the number of dynos on your app. You can calculate how
many you need by taking your average time spent serving a request
(100ms in the example above) and multiplying it by how many requests
you wish to serve per second. 15 requests per second at 100ms per
request would require two dynos. 30 requests per second would require 3
dynos, although you might to go with 4 or even 5 to give yourself a
little headroom, since traffic often comes in spikes.</li>
<li>Speed up your request time. Look in your logs to see where the time
is being spent (database? model code? views?) For deeper analysis, a
performance monitoring tool like <a href="http://newrelic.com/">New Relic</a> or <a href="http://www.fiveruns.com/">FiveRuns</a>
can be invaluable. If you’re spending more than 100ms in your dyno
processing the request, you probably have room for optimization. This
is a big topic, but some options here include use of memcached, HTTP
caching, optimizing your database queries, or using a faster web layer
like Rails Metal.</li>
<li>If you would prefer to not pay for additional dynos or spend time
optimizing your app, you can take no action, and be aware that some
users will get this error message.</li>
</ul>


<a name="request-timeout"></a><h2>Request Timeout</h2>

<p>The Heroku routing mesh will also detect a different kind of
performance problem: long-running requests. If your dyno takes more
than 30 seconds to respond to a request, the mesh will serve a “Request
Timeout” page to the user.</p>

<p>Web requests should be typically processed in no more than 500ms,
and ideally under 200ms. So a request which runs 30 seconds is two
orders of magnitude slower than a best-practice response!</p>

<p>One possibility may be that you have an infinite loop in your code.
Test locally (perhaps with a copy of the production database pulled
down with <a href="http://docs.heroku.com/taps">Taps</a>) and see if you can replicate the problem and fix the bug.</p>

<p>Another possibility is that you are trying to do some sort of long-running task inside your web request, such as:</p>

<ul>
<li>Sending an email</li>
<li>Accessing a remote API (posting to Twitter, querying Flickr, etc)</li>
<li>Web scraping / crawling</li>
<li>Rendering an image or PDF</li>
<li>Heavy computation (generating a fractal, computing a fibonacci sequence, etc)</li>
</ul>


<p>If so, you should move this heavy lifting into a background job which can run asynchronously from your web request.  See <a href="http://docs.heroku.com/background-jobs">Background jobs</a> for details.</p>

<table class="note">
<tbody><tr><td class="icon"></td><td class="content">Additional
concurrency is of no help whatsoever if you are encountering request
timeouts. You can crank your dynos to the maximum and you'll still get
a request timeout, since it is a single request that is failing to
serve in the correct amount of time. Extra dynos increase your
concurrency, not the speed of your requests.</td>
</tr></tbody></table>




	<div id="next_section">Next: <a href="http://docs.heroku.com/support">Getting support →</a></div>


<a href="http://docs.heroku.com/support">		</a></div>
<a href="http://docs.heroku.com/support">	</a></div>
</div>

<!-- google site search -->
<script type="text/javascript" src="Performance_files/jsapi"></script>
<script type="text/javascript">google.load("elements", "1", {packages: "transliteration"});</script><script src="Performance_files/a" type="text/javascript"></script><a href="http://docs.heroku.com/support"><link href="Performance_files/transliteration.css" type="text/css" rel="stylesheet"><script src="Performance_files/transliteration.js" type="text/javascript"></script>
<script type="text/javascript" src="Performance_files/t13n.htm"></script>
<script type="text/javascript" src="Performance_files/brand.htm"></script>


<!-- loopfuse -->
<script src="Performance_files/listen.js" type="text/javascript"></script>
<script type="text/javascript">
_lf_cid = "LF_024e931f";
_lf_remora();
</script>

<!-- google analytics -->
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script><script src="Performance_files/ga.js" type="text/javascript"></script>
<script type="text/javascript">
try{
var pageTracker = _gat._getTracker("UA-2989055-1");
pageTracker._setDomainName(".heroku.com");
pageTracker._trackPageview();
} catch(err) {}
</script>


</a></body></html>