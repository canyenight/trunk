<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" xml:lang="zh-CN" xmlns="http://www.w3.org/1999/xhtml"><head>

  
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>一个简单的语言的语法（二）：ANTLR的重写规则 - Script Ahead, Code Behind - JavaEye技术网站</title>
    <meta name="description" content="系列链接： 一个简单的语言的语法（一）：用ANTLR描述语法 一个简单的语言的语法（二）：ANTLR的重写规则 一个简单的语言的语法（三）：做些小调整，并将生成目标换到CSharp2 上一篇我们使用ANTLR来描述了Jerry语言的基本语法，并通过ANTLRWorks来实验该语法对样本代码生成的解析树。但如同上一篇最后所述，这样得到的解析树中有太多对后续处理来说无用的冗余信息。我们需要消除这些冗余信 ...">
    <meta name="keywords" content="  一个简单的语言的语法（二）：ANTLR的重写规则">
    <link rel="shortcut icon" href="http://rednaxelafx.javaeye.com/images/favicon.ico" type="image/x-icon">
    <link href="http://rednaxelafx.javaeye.com/rss" rel="alternate" title="Script Ahead, Code Behind" type="application/rss+xml">
    <link href="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/blog.css" media="screen" rel="stylesheet" type="text/css">
<link href="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/purple.css" media="screen" rel="stylesheet" type="text/css">
    <script src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/application.js" type="text/javascript"></script>
      <link href="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/SyntaxHighlighter.css" media="screen" rel="stylesheet" type="text/css">
  <script src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/shCoreCommon.js" type="text/javascript"></script>
<script src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/hotkey.js" type="text/javascript"></script>
  <style>
    div#main {background-color: transparent; border: 0; padding: 0px; width: 740px;}
  </style>
  <style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-cpp .datatypes { color: #2E8B57; font-weight: bold; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style></head><body>
    <div id="header">
      <div id="blog_site_nav">
  <a href="http://www.javaeye.com/" class="homepage">首页</a>
  <a href="http://www.javaeye.com/news">新闻</a>
  <a href="http://www.javaeye.com/forums">论坛</a>
  <a href="http://www.javaeye.com/blogs">博客</a>
  <a href="http://www.javaeye.com/job">招聘</a>
  <a href="#" onclick="return false;" id="msna"><u>更多</u> <small>▼</small></a>
  <div class="quick_menu" style="display: none;">
    <a href="http://www.javaeye.com/ask">问答</a>
    <a href="http://www.javaeye.com/wiki">知识库</a>
    <a href="http://www.javaeye.com/groups">圈子</a>
    <a href="http://www.javaeye.com/search">搜索</a>
  </div>
</div>
      <div id="user_nav">
      <a href="http://cnshirui.javaeye.com/" title="查看我的博客首页" class="welcome">欢迎cnshirui</a>
    
      <a href="http://app.javaeye.com/messages" title="发送站内短信">收件箱</a>
    
    
      <a href="http://app.javaeye.com/" title="我的应用首页">我的应用</a>
    
    <div class="quick_menu" style="display: none;">
      <a href="http://app.javaeye.com/feed" title="我订阅的好友动态消息">我的订阅</a>
      <a href="http://app.javaeye.com/feed/my" title="我参与的话题更新的消息">我的参与</a>
      <a href="http://app.javaeye.com/chat" title="用闲聊发表简短的话题">我的闲聊</a>
      <a href="http://app.javaeye.com/mygroup" title="我加入的圈子最新话题">我的圈子</a>
      <a href="http://app.javaeye.com/links" title="我收藏的网络资源链接">我的收藏</a>
      <a href="http://app.javaeye.com/myresume" title="我的个人简历">我的简历</a>
    </div>
        <a href="http://cnshirui.javaeye.com/admin" title="管理我的博客">我的博客</a>
    <a href="http://app.javaeye.com/profile" title="修改我的个人设置">设置</a>
    <a href="http://rednaxelafx.javaeye.com/logout" class="nobg" onclick="var f = document.createElement('form'); f.style.display = 'none'; this.parentNode.appendChild(f); f.method = 'POST'; f.action = this.href;var m = document.createElement('input'); m.setAttribute('type', 'hidden'); m.setAttribute('name', '_method'); m.setAttribute('value', 'put'); f.appendChild(m);f.submit();return false;">退出</a>
  </div>
    </div>

    <div id="page">
      <div id="branding" class="clearfix">
        <div id="blog_name"><h1><a href="http://rednaxelafx.javaeye.com/">Script Ahead, Code Behind</a></h1></div>
        <div id="blog_preview"></div>
        <div id="blog_domain">永久域名 <a href="http://rednaxelafx.javaeye.com/">http://rednaxelafx.javaeye.com</a></div>
      </div>
      
      
      <div id="content" class="clearfix">
        <div id="main">
          


          


<div class="blog_main"> 
  <div id="blog_nav">
    <div class="digg" id="d314507"><h3><a href="#" onclick='digg("blogs", 314507, false);return false;' class="digg">5顶</a><br><a href="#" onclick='digg("blogs", 314507, true);return false;' class="bury">0踩</a></h3></div>
    <div id="pre_next">
      <a href="http://rednaxelafx.javaeye.com/blog/314532" class="next" title="MRI 1.8.6的irb里一个小诡异的地方（以为是IronRuby rev183的bug）">MRI 1.8.6的irb里一个小诡异的地方（以为 ...</a>
      |
      <a href="http://rednaxelafx.javaeye.com/blog/313143" class="pre" title="一个简单的语言的语法（一）：用ANTLR描述语法">一个简单的语言的语法（一）：用ANTLR描述 ...</a>
    </div>
  </div>
  <div class="blog_title">
    <div class="date"><span class="year">2009</span><span class="sep_year">-</span><span class="month">01</span><span class="sep_month">-</span><span class="day">10</span></div>
    <h3 class="type_original" title="原创"><a href="http://rednaxelafx.javaeye.com/blog/314507">一个简单的语言的语法（二）：ANTLR的重写规则</a></h3>
                
  </div>

  <div class="blog_content">
    系列链接：
<br><a href="http://rednaxelafx.javaeye.com/blog/313143" target="_blank">一个简单的语言的语法（一）：用ANTLR描述语法</a>
<br>一个简单的语言的语法（二）：ANTLR的重写规则
<br><a href="http://rednaxelafx.javaeye.com/blog/315807" target="_blank">一个简单的语言的语法（三）：做些小调整，并将生成目标换到CSharp2</a>
<br>
<br>上一篇我们使用ANTLR来描述了Jerry语言的基本语法，并通过ANTLRWorks来实验该语法对样本代码生成的解析树。但如同上一篇最后所述，这样得到的解析树中有太多对后续处理来说无用的冗余信息。我们需要消除这些冗余信息，得到抽象语法树（AST）。
<br>本篇将以之前做的语法为基础，通过添加树重写规则来将ANTLR默认生成的解析树简化整理为抽象语法树。
<br>
<br>本文涉及的源码和运行时库打包在附件里了，懒得复制粘贴的话就直接下载附件的版本，用ANTLRWorks来查看和编辑语法文件吧～
<br>
<br>修改后的语法文件如下：
<br>Jerry.g（ANTLR 3.1语法文件，以Java为生成目标语言）
<br><div class="dp-highlighter"><div class="bar"><div class="tools">Java代码 <embed src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/clipboard_new.swf" flashvars="clipboard=grammar%20Jerry%3B%0A%0Aoptions%20%7B%0A%09language%20%3D%20Java%3B%0A%09output%20%3D%20AST%3B%0A%09ASTLabelType%20%3D%20CommonTree%3B%0A%7D%0A%0Atokens%20%7B%0A%09%2F%2F%20imaginary%20tokens%0A%09VAR_DECL%3B%0A%09SIMPLE_TYPE%3B%0A%09ARRAY_TYPE%3B%0A%09ARRAY_LITERAL%3B%0A%09SIMPLE_VAR_ACCESS%3B%0A%09ARRAY_VAR_ACCESS%3B%0A%09UNARY_MINUS%3B%0A%09BLOCK%3B%0A%09EXPR_STMT%3B%0A%7D%0A%0A%2F%2F%20parser%20rules%0A%0Aprogram%09%3A%09statementList%20EOF!%0A%09%09%7B%0A%09%09%09System.out.println(%0A%09%09%09%09null%20%3D%3D%20%24statementList.tree%20%3F%0A%09%09%09%09%22null%22%20%3A%0A%09%09%09%09%24statementList.tree.toStringTree())%3B%0A%09%09%7D%0A%09%3B%0A%0AstatementList%0A%09%3A%09statement*%0A%09%3B%0A%0Astatement%0A%09%3A%09expressionStatement%0A%09%7C%09variableDeclaration%0A%09%7C%09blockStatement%0A%09%7C%09ifStatement%0A%09%7C%09whileStatement%0A%09%7C%09breakStatement%0A%09%7C%09readStatement%0A%09%7C%09writeStatement%0A%09%3B%0A%0AexpressionStatement%0A%09%3A%09expression%20SEMICOLON%0A%09%09%09-%3E%20%5E(%20EXPR_STMT%20expression%20)%0A%09%3B%0A%0AvariableDeclaration%0A%09%3A%09typeSpecifier%0A%09%09%09(%20Identifier%0A%09%09%09%09(%09-%3E%20%5E(%20VAR_DECL%20%5E(%20SIMPLE_TYPE%20typeSpecifier%20)%20Identifier%20)%0A%09%09%09%09%7C%20(%20LBRACK%20Integer%20RBRACK%20)%2B%0A%09%09%09%09%09-%3E%20%5E(%20VAR_DECL%20%5E(%20ARRAY_TYPE%20typeSpecifier%20Integer%2B%20)%20Identifier%20)%0A%09%09%09%09%7C%20EQ%20expression%0A%09%09%09%09%09-%3E%20%5E(%20VAR_DECL%20%5E(%20SIMPLE_TYPE%20typeSpecifier%20)%20Identifier%20expression%20)%0A%09%09%09%09%7C%20(%20LBRACK%20Integer%20RBRACK%20)%2B%20EQ%20arrayLiteral%0A%09%09%09%09%09-%3E%20%5E(%20VAR_DECL%20%5E(%20ARRAY_TYPE%20typeSpecifier%20Integer%2B%20)%20Identifier%20arrayLiteral%20)%0A%09%09%09%09)%0A%09%09%09)%0A%09%09%09(%20COMMA%20id%3DIdentifier%0A%09%09%09%09(%09-%3E%20%24variableDeclaration%20%5E(%20VAR_DECL%20%5E(%20SIMPLE_TYPE%20typeSpecifier%20)%20%24id%20)%0A%09%09%09%09%7C%20(%20LBRACK%20dim1%2B%3DInteger%20RBRACK%20)%2B%0A%09%09%09%09%09-%3E%20%24variableDeclaration%20%5E(%20VAR_DECL%20%5E(%20ARRAY_TYPE%20typeSpecifier%20%24dim1%2B%20)%20%24id%20)%0A%09%09%09%09%7C%20EQ%20exp%3Dexpression%0A%09%09%09%09%09-%3E%20%24variableDeclaration%20%5E(%20VAR_DECL%20%5E(%20SIMPLE_TYPE%20typeSpecifier%20)%20%24id%20%24exp%20)%0A%09%09%09%09%7C%20(%20LBRACK%20dim2%2B%3DInteger%20RBRACK%20)%2B%20EQ%20al%3DarrayLiteral%0A%09%09%09%09%09-%3E%20%24variableDeclaration%20%5E(%20VAR_DECL%20%5E(%20ARRAY_TYPE%20typeSpecifier%20%24dim2%2B%20)%20%24id%20%24al%20)%0A%09%09%09%09)%0A%09%09%09%09%7B%20if%20(null%20!%3D%20%24dim1)%20%24dim1.clear()%3B%20if%20(null%20!%3D%20%24dim2)%20%24dim2.clear()%3B%20%7D%0A%09%09%09)*%0A%09%09SEMICOLON%0A%09%3B%0A%0AtypeSpecifier%0A%09%3A%09INT%20%7C%20REAL%0A%09%3B%0A%0AarrayLiteral%0A%09%3A%09LBRACE%0A%09%09%09arrayLiteralElement%20(%20COMMA%20arrayLiteralElement%20)*%0A%09%09RBRACE%0A%09%09%09-%3E%20%5E(%20ARRAY_LITERAL%20arrayLiteralElement%2B%20)%0A%09%3B%0A%0AarrayLiteralElement%0A%09%3A%09expression%0A%09%7C%09arrayLiteral%0A%09%3B%0A%0AblockStatement%0A%09%3A%09LBRACE%20statementList%20RBRACE%0A%09%09%09-%3E%20%5E(%20BLOCK%20statementList%20)%0A%09%3B%0A%0AifStatement%0A%09%3A%09IF%5E%20LPAREN!%20expression%20RPAREN!%20statement%20(%20ELSE!%20statement%20)%3F%0A%09%3B%0A%0AwhileStatement%0A%09%3A%09WHILE%5E%20LPAREN!%20expression%20RPAREN!%20statement%0A%09%3B%0A%0AbreakStatement%0A%09%3A%09BREAK%20SEMICOLON!%0A%09%3B%0A%0AreadStatement%0A%09%3A%09READ%5E%20variableAccess%20SEMICOLON!%0A%09%3B%0A%0AwriteStatement%0A%09%3A%09WRITE%5E%20expression%20SEMICOLON!%0A%09%3B%0A%0AvariableAccess%0A%09%3A%09Identifier%0A%09%09(%09-%3E%20%5E(%20SIMPLE_VAR_ACCESS%20Identifier%20)%0A%09%09%7C%20(%20LBRACK%20Integer%20RBRACK%20)%2B%0A%09%09%09-%3E%20%5E(%20ARRAY_VAR_ACCESS%20Identifier%20Integer%2B%20)%0A%09%09)%0A%09%3B%0A%0Aexpression%0A%09%3A%09assignmentExpression%0A%09%7C%09logicalOrExpression%0A%09%3B%0A%0AassignmentExpression%0A%09%3A%09variableAccess%20EQ%5E%20expression%0A%09%3B%0A%0AlogicalOrExpression%0A%09%3A%09logicalAndExpression%20(%20OROR%5E%20logicalAndExpression%20)*%0A%09%3B%0A%0AlogicalAndExpression%0A%09%3A%09relationalExpression%20(%20ANDAND%5E%20relationalExpression%20)*%0A%09%3B%0A%0ArelationalExpression%0A%09%3A%09additiveExpression%20(%20relationalOperator%5E%20additiveExpression%20)%3F%0A%09%7C%09BANG%5E%20relationalExpression%0A%09%3B%0A%0AadditiveExpression%0A%09%3A%09multiplicativeExpression%20(%20additiveOperator%5E%20multiplicativeExpression%20)*%0A%09%3B%0A%20%20%0AmultiplicativeExpression%0A%09%3A%09primaryExpression%20(%20multiplicativeOperator%5E%20primaryExpression%20)*%0A%09%3B%0A%0AprimaryExpression%0A%09%3A%09variableAccess%0A%09%7C%09Integer%0A%09%7C%09RealNumber%0A%09%7C%09LPAREN!%20expression%20RPAREN!%0A%09%7C%09MINUS%20primaryExpression%0A%09%09%09-%3E%20%5E(%20UNARY_MINUS%20primaryExpression%20)%0A%09%3B%0A%0ArelationalOperator%20%20%20%0A%09%3A%09LT%20%7C%20GT%20%7C%20EQEQ%20%7C%20LE%20%7C%20GE%20%7C%20NE%0A%09%3B%0A%0AadditiveOperator%0A%09%3A%09PLUS%20%7C%20MINUS%0A%09%3B%0A%0AmultiplicativeOperator%0A%09%3A%09MUL%20%7C%20DIV%0A%09%3B%0A%0A%2F%2F%20lexer%20rules%0A%0ALPAREN%09%3A%09'('%0A%09%3B%0A%0ARPAREN%09%3A%09')'%0A%09%3B%0A%0ALBRACK%09%3A%09'%5B'%0A%09%3B%0A%0ARBRACK%09%3A%09'%5D'%0A%09%3B%0A%0ALBRACE%09%3A%09'%7B'%0A%09%3B%0A%0ARBRACE%09%3A%09'%7D'%0A%09%3B%0A%0ACOMMA%09%3A%09'%2C'%0A%09%3B%0A%0ASEMICOLON%0A%09%3A%09'%3B'%0A%09%3B%0A%0APLUS%09%3A%09'%2B'%0A%09%3B%0A%0AMINUS%09%3A%09'-'%0A%09%3B%0A%0AMUL%09%3A%09'*'%0A%09%3B%0A%0ADIV%09%3A%09'%2F'%0A%09%3B%0A%0AEQEQ%09%3A%09'%3D%3D'%0A%09%3B%0A%0ANE%09%3A%09'!%3D'%0A%09%3B%0A%0ALT%09%3A%09'%3C'%0A%09%3B%0A%0ALE%09%3A%09'%3C%3D'%0A%09%3B%0A%0AGT%09%3A%09'%3E'%0A%09%3B%0A%0AGE%09%3A%09'%3E%3D'%0A%09%3B%0A%0ABANG%09%3A%09'!'%0A%09%3B%0A%0AANDAND%09%3A%09'%26%26'%0A%09%3B%0A%0AOROR%09%3A%09'%7C%7C'%0A%09%3B%0A%0AEQ%09%3A%09'%3D'%0A%09%3B%0A%0AIF%09%3A%09'if'%0A%09%3B%0A%0AELSE%09%3A%09'else'%0A%09%3B%0A%0AWHILE%09%3A%09'while'%0A%09%3B%0A%0ABREAK%09%3A%09'break'%0A%09%3B%0A%0AREAD%09%3A%09'read'%0A%09%3B%0A%0AWRITE%09%3A%09'write'%0A%09%3B%0A%0AINT%09%3A%09'int'%0A%09%3B%0A%0AREAL%09%3A%09'real'%0A%09%3B%0A%0AIdentifier%0A%09%3A%09LetterOrUnderscore%20(%20LetterOrUnderscore%20%7C%20Digit%20)*%0A%09%3B%0A%0AInteger%09%3A%09Digit%2B%0A%09%3B%0A%0ARealNumber%0A%09%3A%09Digit%2B%20'.'%20Digit%2B%0A%09%3B%0A%0Afragment%0ADigit%09%3A%09'0'..'9'%0A%09%3B%0A%0Afragment%0ALetterOrUnderscore%0A%09%3A%09Letter%20%7C%20'_'%0A%09%3B%0A%0Afragment%0ALetter%09%3A%09(%20'a'..'z'%20%7C%20'A'..'Z'%20)%0A%09%3B%0A%0AWS%09%3A%09(%20'%20'%20%7C%20'%5Ct'%20%7C%20'%5Cr'%20%7C%20'%5Cn'%20)%2B%20%7B%20%24channel%20%3D%20HIDDEN%3B%20%7D%20%20%20%0A%09%3B%0A%0AComment%0A%09%3A%09'%2F*'%20(%20options%20%7B%20greedy%20%3D%20false%3B%20%7D%20%3A%20.%20)*%20'*%2F'%20%7B%20%24channel%20%3D%20HIDDEN%3B%20%7D%0A%09%3B%0A%0ALineComment%0A%09%3A%09'%2F%2F'%20~('%5Cn'%7C'%5Cr')*%20'%5Cr'%3F%20'%5Cn'%20%7B%20%24channel%20%3D%20HIDDEN%3B%20%7D%0A%09%3B" quality="high" allowscriptaccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="15" width="14"></div></div><ol class="dp-j" start="1"><li><span><span>grammar&nbsp;Jerry;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><span>options&nbsp;{&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;language&nbsp;=&nbsp;Java;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;=&nbsp;AST;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;ASTLabelType&nbsp;=&nbsp;CommonTree;&nbsp;&nbsp;</span></li><li><span>}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>tokens&nbsp;{&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;imaginary&nbsp;tokens</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;VAR_DECL;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;SIMPLE_TYPE;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;ARRAY_TYPE;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;ARRAY_LITERAL;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;SIMPLE_VAR_ACCESS;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;ARRAY_VAR_ACCESS;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;UNARY_MINUS;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;BLOCK;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;EXPR_STMT;&nbsp;&nbsp;</span></li><li><span>}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span><span class="comment">//&nbsp;parser&nbsp;rules</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><span>program&nbsp;:&nbsp;&nbsp;&nbsp;statementList&nbsp;EOF!&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">null</span><span>&nbsp;==&nbsp;$statementList.tree&nbsp;?&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"null"</span><span>&nbsp;:&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$statementList.tree.toStringTree());&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>statementList&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;statement*&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>statement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;expressionStatement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;variableDeclaration&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;blockStatement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;ifStatement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;whileStatement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;breakStatement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;readStatement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;writeStatement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>expressionStatement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;expression&nbsp;SEMICOLON&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;^(&nbsp;EXPR_STMT&nbsp;expression&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>variableDeclaration&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;typeSpecifier&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;Identifier&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;&nbsp;&nbsp;-&gt;&nbsp;^(&nbsp;VAR_DECL&nbsp;^(&nbsp;SIMPLE_TYPE&nbsp;typeSpecifier&nbsp;)&nbsp;Identifier&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;(&nbsp;LBRACK&nbsp;Integer&nbsp;RBRACK&nbsp;)+&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;^(&nbsp;VAR_DECL&nbsp;^(&nbsp;ARRAY_TYPE&nbsp;typeSpecifier&nbsp;Integer+&nbsp;)&nbsp;Identifier&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;EQ&nbsp;expression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;^(&nbsp;VAR_DECL&nbsp;^(&nbsp;SIMPLE_TYPE&nbsp;typeSpecifier&nbsp;)&nbsp;Identifier&nbsp;expression&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;(&nbsp;LBRACK&nbsp;Integer&nbsp;RBRACK&nbsp;)+&nbsp;EQ&nbsp;arrayLiteral&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;^(&nbsp;VAR_DECL&nbsp;^(&nbsp;ARRAY_TYPE&nbsp;typeSpecifier&nbsp;Integer+&nbsp;)&nbsp;Identifier&nbsp;arrayLiteral&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;COMMA&nbsp;id=Identifier&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;&nbsp;&nbsp;-&gt;&nbsp;$variableDeclaration&nbsp;^(&nbsp;VAR_DECL&nbsp;^(&nbsp;SIMPLE_TYPE&nbsp;typeSpecifier&nbsp;)&nbsp;$id&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;(&nbsp;LBRACK&nbsp;dim1+=Integer&nbsp;RBRACK&nbsp;)+&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;$variableDeclaration&nbsp;^(&nbsp;VAR_DECL&nbsp;^(&nbsp;ARRAY_TYPE&nbsp;typeSpecifier&nbsp;$dim1+&nbsp;)&nbsp;$id&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;EQ&nbsp;exp=expression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;$variableDeclaration&nbsp;^(&nbsp;VAR_DECL&nbsp;^(&nbsp;SIMPLE_TYPE&nbsp;typeSpecifier&nbsp;)&nbsp;$id&nbsp;$exp&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;(&nbsp;LBRACK&nbsp;dim2+=Integer&nbsp;RBRACK&nbsp;)+&nbsp;EQ&nbsp;al=arrayLiteral&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;$variableDeclaration&nbsp;^(&nbsp;VAR_DECL&nbsp;^(&nbsp;ARRAY_TYPE&nbsp;typeSpecifier&nbsp;$dim2+&nbsp;)&nbsp;$id&nbsp;$al&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<span class="keyword">if</span><span>&nbsp;(</span><span class="keyword">null</span><span>&nbsp;!=&nbsp;$dim1)&nbsp;$dim1.clear();&nbsp;</span><span class="keyword">if</span><span>&nbsp;(</span><span class="keyword">null</span><span>&nbsp;!=&nbsp;$dim2)&nbsp;$dim2.clear();&nbsp;}&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)*&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SEMICOLON&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>typeSpecifier&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;INT&nbsp;|&nbsp;REAL&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>arrayLiteral&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;LBRACE&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrayLiteralElement&nbsp;(&nbsp;COMMA&nbsp;arrayLiteralElement&nbsp;)*&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RBRACE&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;^(&nbsp;ARRAY_LITERAL&nbsp;arrayLiteralElement+&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>arrayLiteralElement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;expression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;arrayLiteral&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>blockStatement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;LBRACE&nbsp;statementList&nbsp;RBRACE&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;^(&nbsp;BLOCK&nbsp;statementList&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>ifStatement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;IF^&nbsp;LPAREN!&nbsp;expression&nbsp;RPAREN!&nbsp;statement&nbsp;(&nbsp;ELSE!&nbsp;statement&nbsp;)?&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>whileStatement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;WHILE^&nbsp;LPAREN!&nbsp;expression&nbsp;RPAREN!&nbsp;statement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>breakStatement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;BREAK&nbsp;SEMICOLON!&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>readStatement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;READ^&nbsp;variableAccess&nbsp;SEMICOLON!&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>writeStatement&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;WRITE^&nbsp;expression&nbsp;SEMICOLON!&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>variableAccess&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;Identifier&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;&nbsp;&nbsp;-&gt;&nbsp;^(&nbsp;SIMPLE_VAR_ACCESS&nbsp;Identifier&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;(&nbsp;LBRACK&nbsp;Integer&nbsp;RBRACK&nbsp;)+&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;^(&nbsp;ARRAY_VAR_ACCESS&nbsp;Identifier&nbsp;Integer+&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>expression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;assignmentExpression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;logicalOrExpression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>assignmentExpression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;variableAccess&nbsp;EQ^&nbsp;expression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>logicalOrExpression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;logicalAndExpression&nbsp;(&nbsp;OROR^&nbsp;logicalAndExpression&nbsp;)*&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>logicalAndExpression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;relationalExpression&nbsp;(&nbsp;ANDAND^&nbsp;relationalExpression&nbsp;)*&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>relationalExpression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;additiveExpression&nbsp;(&nbsp;relationalOperator^&nbsp;additiveExpression&nbsp;)?&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;BANG^&nbsp;relationalExpression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>additiveExpression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;multiplicativeExpression&nbsp;(&nbsp;additiveOperator^&nbsp;multiplicativeExpression&nbsp;)*&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li><span>multiplicativeExpression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;primaryExpression&nbsp;(&nbsp;multiplicativeOperator^&nbsp;primaryExpression&nbsp;)*&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>primaryExpression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;variableAccess&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;Integer&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;RealNumber&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;LPAREN!&nbsp;expression&nbsp;RPAREN!&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;MINUS&nbsp;primaryExpression&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;^(&nbsp;UNARY_MINUS&nbsp;primaryExpression&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>relationalOperator&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;LT&nbsp;|&nbsp;GT&nbsp;|&nbsp;EQEQ&nbsp;|&nbsp;LE&nbsp;|&nbsp;GE&nbsp;|&nbsp;NE&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>additiveOperator&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;PLUS&nbsp;|&nbsp;MINUS&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>multiplicativeOperator&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;MUL&nbsp;|&nbsp;DIV&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span><span class="comment">//&nbsp;lexer&nbsp;rules</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><span>LPAREN&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'('</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>RPAREN&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">')'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>LBRACK&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'['</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>RBRACK&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">']'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>LBRACE&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'{'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>RBRACE&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'}'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>COMMA&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">','</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>SEMICOLON&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">';'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>PLUS&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'+'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>MINUS&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'-'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>MUL&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'*'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>DIV&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'/'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>EQEQ&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'=='</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>NE&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'!='</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>LT&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'&lt;'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>LE&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'&lt;='</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>GT&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'&gt;'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>GE&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'&gt;='</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>BANG&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'!'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>ANDAND&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'&amp;&amp;'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>OROR&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'||'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>EQ&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'='</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>IF&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'if'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>ELSE&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'else'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>WHILE&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'while'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>BREAK&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'break'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>READ&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'read'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>WRITE&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'write'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>INT&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'int'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>REAL&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'real'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>Identifier&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;LetterOrUnderscore&nbsp;(&nbsp;LetterOrUnderscore&nbsp;|&nbsp;Digit&nbsp;)*&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>Integer&nbsp;:&nbsp;&nbsp;&nbsp;Digit+&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>RealNumber&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;Digit+&nbsp;<span class="string">'.'</span><span>&nbsp;Digit+&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>fragment&nbsp;&nbsp;</span></li><li><span>Digit&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'0'</span><span>..</span><span class="string">'9'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>fragment&nbsp;&nbsp;</span></li><li><span>LetterOrUnderscore&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;Letter&nbsp;|&nbsp;<span class="string">'_'</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>fragment&nbsp;&nbsp;</span></li><li><span>Letter&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;(&nbsp;<span class="string">'a'</span><span>..</span><span class="string">'z'</span><span>&nbsp;|&nbsp;</span><span class="string">'A'</span><span>..</span><span class="string">'Z'</span><span>&nbsp;)&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>WS&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;(&nbsp;<span class="string">'&nbsp;'</span><span>&nbsp;|&nbsp;</span><span class="string">'\t'</span><span>&nbsp;|&nbsp;</span><span class="string">'\r'</span><span>&nbsp;|&nbsp;</span><span class="string">'\n'</span><span>&nbsp;)+&nbsp;{&nbsp;$channel&nbsp;=&nbsp;HIDDEN;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>Comment&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'/*'</span><span>&nbsp;(&nbsp;options&nbsp;{&nbsp;greedy&nbsp;=&nbsp;</span><span class="keyword">false</span><span>;&nbsp;}&nbsp;:&nbsp;.&nbsp;)*&nbsp;</span><span class="string">'*/'</span><span>&nbsp;{&nbsp;$channel&nbsp;=&nbsp;HIDDEN;&nbsp;}&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>LineComment&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;<span class="string">'//'</span><span>&nbsp;~(</span><span class="string">'\n'</span><span>|</span><span class="string">'\r'</span><span>)*&nbsp;</span><span class="string">'\r'</span><span>?&nbsp;</span><span class="string">'\n'</span><span>&nbsp;{&nbsp;$channel&nbsp;=&nbsp;HIDDEN;&nbsp;}&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;&nbsp;</span></li></ol></div><pre style="display: none;" name="code" class="java">grammar Jerry;

options {
	language = Java;
	output = AST;
	ASTLabelType = CommonTree;
}

tokens {
	// imaginary tokens
	VAR_DECL;
	SIMPLE_TYPE;
	ARRAY_TYPE;
	ARRAY_LITERAL;
	SIMPLE_VAR_ACCESS;
	ARRAY_VAR_ACCESS;
	UNARY_MINUS;
	BLOCK;
	EXPR_STMT;
}

// parser rules

program	:	statementList EOF!
		{
			System.out.println(
				null == $statementList.tree ?
				"null" :
				$statementList.tree.toStringTree());
		}
	;

statementList
	:	statement*
	;

statement
	:	expressionStatement
	|	variableDeclaration
	|	blockStatement
	|	ifStatement
	|	whileStatement
	|	breakStatement
	|	readStatement
	|	writeStatement
	;

expressionStatement
	:	expression SEMICOLON
			-&gt; ^( EXPR_STMT expression )
	;

variableDeclaration
	:	typeSpecifier
			( Identifier
				(	-&gt; ^( VAR_DECL ^( SIMPLE_TYPE typeSpecifier ) Identifier )
				| ( LBRACK Integer RBRACK )+
					-&gt; ^( VAR_DECL ^( ARRAY_TYPE typeSpecifier Integer+ ) Identifier )
				| EQ expression
					-&gt; ^( VAR_DECL ^( SIMPLE_TYPE typeSpecifier ) Identifier expression )
				| ( LBRACK Integer RBRACK )+ EQ arrayLiteral
					-&gt; ^( VAR_DECL ^( ARRAY_TYPE typeSpecifier Integer+ ) Identifier arrayLiteral )
				)
			)
			( COMMA id=Identifier
				(	-&gt; $variableDeclaration ^( VAR_DECL ^( SIMPLE_TYPE typeSpecifier ) $id )
				| ( LBRACK dim1+=Integer RBRACK )+
					-&gt; $variableDeclaration ^( VAR_DECL ^( ARRAY_TYPE typeSpecifier $dim1+ ) $id )
				| EQ exp=expression
					-&gt; $variableDeclaration ^( VAR_DECL ^( SIMPLE_TYPE typeSpecifier ) $id $exp )
				| ( LBRACK dim2+=Integer RBRACK )+ EQ al=arrayLiteral
					-&gt; $variableDeclaration ^( VAR_DECL ^( ARRAY_TYPE typeSpecifier $dim2+ ) $id $al )
				)
				{ if (null != $dim1) $dim1.clear(); if (null != $dim2) $dim2.clear(); }
			)*
		SEMICOLON
	;

typeSpecifier
	:	INT | REAL
	;

arrayLiteral
	:	LBRACE
			arrayLiteralElement ( COMMA arrayLiteralElement )*
		RBRACE
			-&gt; ^( ARRAY_LITERAL arrayLiteralElement+ )
	;

arrayLiteralElement
	:	expression
	|	arrayLiteral
	;

blockStatement
	:	LBRACE statementList RBRACE
			-&gt; ^( BLOCK statementList )
	;

ifStatement
	:	IF^ LPAREN! expression RPAREN! statement ( ELSE! statement )?
	;

whileStatement
	:	WHILE^ LPAREN! expression RPAREN! statement
	;

breakStatement
	:	BREAK SEMICOLON!
	;

readStatement
	:	READ^ variableAccess SEMICOLON!
	;

writeStatement
	:	WRITE^ expression SEMICOLON!
	;

variableAccess
	:	Identifier
		(	-&gt; ^( SIMPLE_VAR_ACCESS Identifier )
		| ( LBRACK Integer RBRACK )+
			-&gt; ^( ARRAY_VAR_ACCESS Identifier Integer+ )
		)
	;

expression
	:	assignmentExpression
	|	logicalOrExpression
	;

assignmentExpression
	:	variableAccess EQ^ expression
	;

logicalOrExpression
	:	logicalAndExpression ( OROR^ logicalAndExpression )*
	;

logicalAndExpression
	:	relationalExpression ( ANDAND^ relationalExpression )*
	;

relationalExpression
	:	additiveExpression ( relationalOperator^ additiveExpression )?
	|	BANG^ relationalExpression
	;

additiveExpression
	:	multiplicativeExpression ( additiveOperator^ multiplicativeExpression )*
	;
  
multiplicativeExpression
	:	primaryExpression ( multiplicativeOperator^ primaryExpression )*
	;

primaryExpression
	:	variableAccess
	|	Integer
	|	RealNumber
	|	LPAREN! expression RPAREN!
	|	MINUS primaryExpression
			-&gt; ^( UNARY_MINUS primaryExpression )
	;

relationalOperator   
	:	LT | GT | EQEQ | LE | GE | NE
	;

additiveOperator
	:	PLUS | MINUS
	;

multiplicativeOperator
	:	MUL | DIV
	;

// lexer rules

LPAREN	:	'('
	;

RPAREN	:	')'
	;

LBRACK	:	'['
	;

RBRACK	:	']'
	;

LBRACE	:	'{'
	;

RBRACE	:	'}'
	;

COMMA	:	','
	;

SEMICOLON
	:	';'
	;

PLUS	:	'+'
	;

MINUS	:	'-'
	;

MUL	:	'*'
	;

DIV	:	'/'
	;

EQEQ	:	'=='
	;

NE	:	'!='
	;

LT	:	'&lt;'
	;

LE	:	'&lt;='
	;

GT	:	'&gt;'
	;

GE	:	'&gt;='
	;

BANG	:	'!'
	;

ANDAND	:	'&amp;&amp;'
	;

OROR	:	'||'
	;

EQ	:	'='
	;

IF	:	'if'
	;

ELSE	:	'else'
	;

WHILE	:	'while'
	;

BREAK	:	'break'
	;

READ	:	'read'
	;

WRITE	:	'write'
	;

INT	:	'int'
	;

REAL	:	'real'
	;

Identifier
	:	LetterOrUnderscore ( LetterOrUnderscore | Digit )*
	;

Integer	:	Digit+
	;

RealNumber
	:	Digit+ '.' Digit+
	;

fragment
Digit	:	'0'..'9'
	;

fragment
LetterOrUnderscore
	:	Letter | '_'
	;

fragment
Letter	:	( 'a'..'z' | 'A'..'Z' )
	;

WS	:	( ' ' | '\t' | '\r' | '\n' )+ { $channel = HIDDEN; }   
	;

Comment
	:	'/*' ( options { greedy = false; } : . )* '*/' { $channel = HIDDEN; }
	;

LineComment
	:	'//' ~('\n'|'\r')* '\r'? '\n' { $channel = HIDDEN; }
	;</pre>
<br>
<br>稍微说明一下修改点。应该观察到lexer rules部分是完全没有改变的，修改的主要是一些选项和parser rules。
<br>
<br>首先，在文件的开头添加了一组选项：
<br><div class="dp-highlighter"><div class="bar"><div class="tools">Java代码 <embed src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/clipboard_new.swf" flashvars="clipboard=options%20%7B%0A%09language%20%3D%20Java%3B%0A%09output%20%3D%20AST%3B%0A%09ASTLabelType%20%3D%20CommonTree%3B%0A%7D" quality="high" allowscriptaccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="15" width="14"></div></div><ol class="dp-j" start="1"><li><span><span>options&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;language&nbsp;=&nbsp;Java;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;=&nbsp;AST;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;ASTLabelType&nbsp;=&nbsp;CommonTree;&nbsp;&nbsp;</span></li><li><span>}&nbsp;&nbsp;</span></li></ol></div><pre style="display: none;" name="code" class="java">options {
	language = Java;
	output = AST;
	ASTLabelType = CommonTree;
}</pre>
<br>ANTLR会知道应该使用生成AST的模式，以CommonTree作为AST的节点类型，并以Java作为生成的解析器源码的语言。上一篇是在
ANTLRWorks里编辑和实验语法的，这次我们需要生成实际能运行的解析器，所以需要指定这些选项（默认就是生成Java源码，不过后续文章中我应该
会换用CSharp2目标。这个以后再说）。
<br>
<br>接下来，可以看到除了原本在lexer rules里定义的实际存在的token类型之外，这次我们在语法文件的开头还增加了一组虚拟的token类型。这些token类型是为了让生成出来的抽象语法树易于解析而添加的。
<br>例如，观察VAR_DECL这个token类型。在原本的语法中，没有任何关键字能清楚的标识出当前处理的内容是一个变量声明。为了方便后续分析，我们可以“制造”出一个虚构的token作为一个变量声明语句的根元素，然后以变量的类型、标识符和初始值为子元素。
<br>
<br>然后就是最重要的部分，树重写规则了。有两种形式来表述树重写规则：一是直接在原本的语法规则上添加树生成用的运算符（^和!），二是在原本的语法规则后添加一个箭头（"-&gt;"），并在箭头后显式指定需要生成的节点的结构。
<br>看两个例子：
<br>while语句。原本的语法是：
<br><div class="dp-highlighter"><div class="bar"><div class="tools">Java代码 <embed src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/clipboard_new.swf" flashvars="clipboard=whileStatement%20%3A%20'while'%20'('%20expression%20')'%20statement%20%3B" quality="high" allowscriptaccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="15" width="14"></div></div><ol class="dp-j" start="1"><li><span><span>whileStatement&nbsp;:&nbsp;</span><span class="string">'while'</span><span>&nbsp;</span><span class="string">'('</span><span>&nbsp;expression&nbsp;</span><span class="string">')'</span><span>&nbsp;statement&nbsp;;&nbsp;&nbsp;</span></span></li></ol></div><pre style="display: none;" name="code" class="java">whileStatement : 'while' '(' expression ')' statement ;</pre>
<br>这里我们想让生成出来的子树以'while'为根节点，以expression和statement为子节点。
<br>可以直接在该语法上添加树生成运算符：在某个元素后加上帽子符号（'^'）来表示它是生成的子树的根节点，在某个元素后加上叹号（'!'）来表示生成的子树中应该忽略该元素。于是修改得到的语法是：
<br><div class="dp-highlighter"><div class="bar"><div class="tools">Java代码 <embed src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/clipboard_new.swf" flashvars="clipboard=whileStatement%20%3A%20'while'%5E%20'('!%20expression%20')'!%20statement%20%3B" quality="high" allowscriptaccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="15" width="14"></div></div><ol class="dp-j" start="1"><li><span><span>whileStatement&nbsp;:&nbsp;</span><span class="string">'while'</span><span>^&nbsp;</span><span class="string">'('</span><span>!&nbsp;expression&nbsp;</span><span class="string">')'</span><span>!&nbsp;statement&nbsp;;&nbsp;&nbsp;</span></span></li></ol></div><pre style="display: none;" name="code" class="java">whileStatement : 'while'^ '('! expression ')'! statement ;</pre>
<br>也可以显式指定树重写规则。一棵子树用这种方式来表示：
<br><div class="dp-highlighter"><div class="bar"><div class="tools">Java代码 <embed src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/clipboard_new.swf" flashvars="clipboard=%5E(%20root%20element1%20element2%20...%20)" quality="high" allowscriptaccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="15" width="14"></div></div><ol class="dp-j" start="1"><li><span><span>^(&nbsp;root&nbsp;element1&nbsp;element2&nbsp;...&nbsp;)&nbsp;&nbsp;</span></span></li></ol></div><pre style="display: none;" name="code" class="java">^( root element1 element2 ... )</pre>
<br>这里我们要的就是：
<br><div class="dp-highlighter"><div class="bar"><div class="tools">Java代码 <embed src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/clipboard_new.swf" flashvars="clipboard=whileStatement%20%3A%20'while'%20'('%20expression%20')'%20statement%0A%20%20%20%20-%3E%20%5E(%20'while'%20expression%20statement%20)%0A%20%20%3B" quality="high" allowscriptaccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="15" width="14"></div></div><ol class="dp-j" start="1"><li><span><span>whileStatement&nbsp;:&nbsp;</span><span class="string">'while'</span><span>&nbsp;</span><span class="string">'('</span><span>&nbsp;expression&nbsp;</span><span class="string">')'</span><span>&nbsp;statement&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;^(&nbsp;<span class="string">'while'</span><span>&nbsp;expression&nbsp;statement&nbsp;)&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;;&nbsp;&nbsp;</span></li></ol></div><pre style="display: none;" name="code" class="java">whileStatement : 'while' '(' expression ')' statement
    -&gt; ^( 'while' expression statement )
  ;</pre>
<br>这种形式我们能一目了然看到最终生成的子树的结构。
<br>两种形式是等价的，可以根据具体情况来选择能简单而清晰的表示出树改写规则的版本。
<br>
<br>对表达式相关的语法规则，我们几乎都是用添加运算符的形式来表示树改写规则，因为对左结合的双目运算符，这样是最简洁的。
<br>ANTLR生成的解析器使用LL(*)算法；与一般的LL解析器一样，ANTLR不支持左递归的语法规则。这使得书写左结合的双目运算符时，一般得写成这样的形式：
<br><div class="dp-highlighter"><div class="bar"><div class="tools">Java代码 <embed src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/clipboard_new.swf" flashvars="clipboard=exprWithHigherPrecedence%0A%20%20%3A%20exprWithLowerPrecedence%20(%20op%20exprWithLowerPrecedence%20)*%0A%20%20%3B" quality="high" allowscriptaccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="15" width="14"></div></div><ol class="dp-j" start="1"><li><span><span>exprWithHigherPrecedence&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;:&nbsp;exprWithLowerPrecedence&nbsp;(&nbsp;op&nbsp;exprWithLowerPrecedence&nbsp;)*&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;;&nbsp;&nbsp;</span></li></ol></div><pre style="display: none;" name="code" class="java">exprWithHigherPrecedence
  : exprWithLowerPrecedence ( op exprWithLowerPrecedence )*
  ;</pre>
<br>而不能以左递归来指定左结合。（但右结合还是可以用右递归来指定的。）
<br>那么在表示树改写规则的时候，使用运算符来修饰语法就是这样：
<br><div class="dp-highlighter"><div class="bar"><div class="tools">Java代码 <embed src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/clipboard_new.swf" flashvars="clipboard=exprWithHigherPrecedence%0A%20%20%3A%20exprWithLowerPrecedence%20(%20op%5E%20exprWithLowerPrecedence%20)*%0A%20%20%3B" quality="high" allowscriptaccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="15" width="14"></div></div><ol class="dp-j" start="1"><li><span><span>exprWithHigherPrecedence&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;:&nbsp;exprWithLowerPrecedence&nbsp;(&nbsp;op^&nbsp;exprWithLowerPrecedence&nbsp;)*&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;;&nbsp;&nbsp;</span></li></ol></div><pre style="display: none;" name="code" class="java">exprWithHigherPrecedence
  : exprWithLowerPrecedence ( op^ exprWithLowerPrecedence )*
  ;</pre>
<br>只是在op的后面添加了一个帽子符号（'^'），表明在没有匹配到op运算符时就直接返回exprWithLowerPrecedence规则所
生成的树；而如果匹配到了op运算符，则每匹配到一次就生成一个新的以op为根节点的、前后两个较低优先级的表达式节点为子节点的树。
<br>这个树改写规则如果要显式指定，就得写成：
<br><div class="dp-highlighter"><div class="bar"><div class="tools">Java代码 <embed src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/clipboard_new.swf" flashvars="clipboard=exprWithHigherPrecedence%0A%20%20%3A%20exprWithLowerPrecedence%0A%20%20%20%20%20%20(%20op%20exp%3DexprWithLowerPrecedence%0A%20%20%20%20%20%20%20%20%20%20-%3E%20%5E(%20op%20%24exprWithHigherPrecedence%20%24exp%20)%0A%20%20%20%20%20%20)*%0A%20%20%3B" quality="high" allowscriptaccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="15" width="14"></div></div><ol class="dp-j" start="1"><li><span><span>exprWithHigherPrecedence&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;:&nbsp;exprWithLowerPrecedence&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;op&nbsp;exp=exprWithLowerPrecedence&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;^(&nbsp;op&nbsp;$exprWithHigherPrecedence&nbsp;$exp&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)*&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;;&nbsp;&nbsp;</span></li></ol></div><pre style="display: none;" name="code" class="java">exprWithHigherPrecedence
  : exprWithLowerPrecedence
      ( op exp=exprWithLowerPrecedence
          -&gt; ^( op $exprWithHigherPrecedence $exp )
      )*
  ;</pre>
<br>后者相比之下麻烦多了，所以一般都会使用前者。
<br>
<br>可惜C风格的变量声明语句的语法很麻烦，结果variableDeclaration在修改后膨胀了好多 T T
<br>最不爽的地方就是C风格的数组变量声明是把数组的维度写在变量名后面的。这就使得语句开头的类型（例如int、char等）可能只是变量的实际类型的一部分，而另一部分要在变量名的之前（例如表示指针的星号（'*'））或之后（例如表示数组的方括号（'[' ']'））。
<br>就不能把整个类型写在一起么……T T 于是衍生出来的Java和C#明显都吸取了这个教训。
<br>
<br>在语法的program规则中，我们添加了一条嵌入语法动作，让生成的解析器在匹配完program规则后将其对应的抽象语法树以字符串的形式输出出来。
<br>
<br>如果是在ANTLRWorks里编辑该语法文件，可以在菜单里选择Generate -&gt; Generate Code来生成出解析器的源码。这里例子中我们会得到JerryLexer.java和JerryParser.java。
<br>要运行这个解析器，还需要写一个简单的启动程序来调用生成出来的JerryLexer和JerryParser。源码如下：
<br>TestJerry.java
<br><div class="dp-highlighter"><div class="bar"><div class="tools">Java代码 <embed src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/clipboard_new.swf" flashvars="clipboard=import%20org.antlr.runtime.*%3B%0A%0Apublic%20class%20TestJerry%20%7B%0A%20%20%20%20public%20static%20void%20main(String%5B%5D%20args)%20throws%20Exception%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Create%20an%20input%20character%20stream%20from%20standard%20in%0A%20%20%20%20%20%20%20%20ANTLRInputStream%20input%20%3D%20new%20ANTLRInputStream(System.in)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Create%20an%20JerryLexer%20that%20feeds%20from%20that%20stream%0A%20%20%20%20%20%20%20%20JerryLexer%20lexer%20%3D%20new%20JerryLexer(input)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Create%20a%20stream%20of%20tokens%20fed%20by%20the%20lexer%0A%20%20%20%20%20%20%20%20CommonTokenStream%20tokens%20%3D%20new%20CommonTokenStream(lexer)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Create%20a%20parser%20that%20feeds%20off%20the%20token%20stream%0A%20%20%20%20%20%20%20%20JerryParser%20parser%20%3D%20new%20JerryParser(tokens)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Begin%20parsing%20at%20rule%20prog%0A%20%20%20%20%20%20%20%20parser.program()%3B%0A%20%20%20%20%7D%0A%7D" quality="high" allowscriptaccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="15" width="14"></div></div><ol class="dp-j" start="1"><li><span><span class="keyword">import</span><span>&nbsp;org.antlr.runtime.*;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;TestJerry&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;main(String[]&nbsp;args)&nbsp;</span><span class="keyword">throws</span><span>&nbsp;Exception&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;Create&nbsp;an&nbsp;input&nbsp;character&nbsp;stream&nbsp;from&nbsp;standard&nbsp;in</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ANTLRInputStream&nbsp;input&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;ANTLRInputStream(System.in);&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;Create&nbsp;an&nbsp;JerryLexer&nbsp;that&nbsp;feeds&nbsp;from&nbsp;that&nbsp;stream</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JerryLexer&nbsp;lexer&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;JerryLexer(input);&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;Create&nbsp;a&nbsp;stream&nbsp;of&nbsp;tokens&nbsp;fed&nbsp;by&nbsp;the&nbsp;lexer</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CommonTokenStream&nbsp;tokens&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;CommonTokenStream(lexer);&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;Create&nbsp;a&nbsp;parser&nbsp;that&nbsp;feeds&nbsp;off&nbsp;the&nbsp;token&nbsp;stream</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JerryParser&nbsp;parser&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;JerryParser(tokens);&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;Begin&nbsp;parsing&nbsp;at&nbsp;rule&nbsp;prog</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parser.program();&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li><span>}&nbsp;&nbsp;</span></li></ol></div><pre style="display: none;" name="code" class="java">import org.antlr.runtime.*;

public class TestJerry {
    public static void main(String[] args) throws Exception {
        // Create an input character stream from standard in
        ANTLRInputStream input = new ANTLRInputStream(System.in);
        // Create an JerryLexer that feeds from that stream
        JerryLexer lexer = new JerryLexer(input);
        // Create a stream of tokens fed by the lexer
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        // Create a parser that feeds off the token stream
        JerryParser parser = new JerryParser(tokens);
        // Begin parsing at rule prog
        parser.program();
    }
}</pre>
<br>它指定从标准输入流得到要解析的Jerry代码，然后通过JerryLexer将代码解析成token流，再将token流交给JerryParser进行句法分析。
<br>
<br>将JerryLexer.java、JerryParser.java和TestJerry.java放在跟ANTLRWorks同一目录下，然后编译它们：
<br><div class="quote_title">引用</div><div class="quote_div">javac -Xlint:unchecked -cp antlrworks-1.2.2.jar JerryLexer.java JerryParser.java TestJerry.java</div>
<br>（因为ANTLRWorks里含有ANTLR的运行时库，而我正好又是用ANTLRWorks来编辑语法文件的，所以直接用ANTLRWorks
的JAR包放在classpath里来得到需要的ANTLR运行时类。实际开发的话可以从ANTLR官网获得只含有ANTLR运行时库的JAR包并在编译
和运行的时候将其添加到classpath里。）
<br>
<br><a href="http://rednaxelafx.javaeye.com/blog/313143" target="_blank">上一篇</a>的最后有这样的一段Jerry例子：
<br><div class="dp-highlighter"><div class="bar"><div class="tools">C代码 <embed src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/clipboard_new.swf" flashvars="clipboard=%2F%2F%20line%20comment%0A%2F%2F%20declare%20variables%20with%2Fwithout%20initializers%0Aint%20i%20%3D%201%2C%20j%3B%0Aint%20x%20%3D%20i%20%2B%202%20*%203%20-%204%20%2F%20(%206%20-%20-%207%20)%3B%0Aint%20array%5B2%5D%5B3%5D%20%3D%20%7B%0A%20%20%7B%200%2C%201%2C%202%20%7D%2C%0A%20%20%7B%203%2C%204%2C%206%20%7D%0A%7D%3B%0A%0A%2F*%0A%20%20block%20comment%0A*%2F%0A%0Awhile%20(i%20%3C%2010)%20i%20%3D%20i%20%2B%201%3B%0Awhile%20(!x%20%3E%200%20%26%26%20i%20%3C%2010)%20%7B%0A%20%20x%20%3D%20x%20-%201%3B%0A%20%20if%20(i%20%3C%205)%20break%3B%0A%20%20else%20read%20i%3B%0A%7D%0A%0Awrite%20x%20-%20j%3B" quality="high" allowscriptaccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="15" width="14"></div></div><ol class="dp-cpp" start="1"><li><span><span class="comment">//&nbsp;line&nbsp;comment</span><span>&nbsp;&nbsp;</span></span></li><li><span><span class="comment">//&nbsp;declare&nbsp;variables&nbsp;with/without&nbsp;initializers</span><span>&nbsp;&nbsp;</span></span></li><li><span><span class="datatypes">int</span><span>&nbsp;i&nbsp;=&nbsp;1,&nbsp;j;&nbsp;&nbsp;</span></span></li><li><span><span class="datatypes">int</span><span>&nbsp;x&nbsp;=&nbsp;i&nbsp;+&nbsp;2&nbsp;*&nbsp;3&nbsp;-&nbsp;4&nbsp;/&nbsp;(&nbsp;6&nbsp;-&nbsp;-&nbsp;7&nbsp;);&nbsp;&nbsp;</span></span></li><li><span><span class="datatypes">int</span><span>&nbsp;array[2][3]&nbsp;=&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;{&nbsp;0,&nbsp;1,&nbsp;2&nbsp;},&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;{&nbsp;3,&nbsp;4,&nbsp;6&nbsp;}&nbsp;&nbsp;</span></li><li><span>};&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span><span class="comment">/*</span>&nbsp;</span></li><li><span><span class="comment">&nbsp;&nbsp;block&nbsp;comment</span>&nbsp;</span></li><li><span><span class="comment">*/</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;</span></li><li><span><span class="keyword">while</span><span>&nbsp;(i&nbsp;&lt;&nbsp;10)&nbsp;i&nbsp;=&nbsp;i&nbsp;+&nbsp;1;&nbsp;&nbsp;</span></span></li><li><span><span class="keyword">while</span><span>&nbsp;(!x&nbsp;&gt;&nbsp;0&nbsp;&amp;&amp;&nbsp;i&nbsp;&lt;&nbsp;10)&nbsp;{&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;x&nbsp;=&nbsp;x&nbsp;-&nbsp;1;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;(i&nbsp;&lt;&nbsp;5)&nbsp;</span><span class="keyword">break</span><span>;&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;read&nbsp;i;&nbsp;&nbsp;</span></span></li><li><span>}&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>write&nbsp;x&nbsp;-&nbsp;j;&nbsp;&nbsp;</span></li></ol></div><pre style="display: none;" name="code" class="c">// line comment
// declare variables with/without initializers
int i = 1, j;
int x = i + 2 * 3 - 4 / ( 6 - - 7 );
int array[2][3] = {
  { 0, 1, 2 },
  { 3, 4, 6 }
};

/*
  block comment
*/

while (i &lt; 10) i = i + 1;
while (!x &gt; 0 &amp;&amp; i &lt; 10) {
  x = x - 1;
  if (i &lt; 5) break;
  else read i;
}

write x - j;</pre>
<br>（语法是符合要求的，至于代码的意义就别追究了，只是用来演示各种语法结构随便写的）
<br>
<br>用本篇的ANTLR语法文件生成的解析器，我们可以解析这个例子，得到对应的抽象语法树的字符串表示。表示方法是：
<br><div class="dp-highlighter"><div class="bar"><div class="tools">Java代码 <embed src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/clipboard_new.swf" flashvars="clipboard=(root%20element1%20element2%20...)" quality="high" allowscriptaccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="15" width="14"></div></div><ol class="dp-j" start="1"><li><span><span>(root&nbsp;element1&nbsp;element2&nbsp;...)&nbsp;&nbsp;</span></span></li></ol></div><pre style="display: none;" name="code" class="java">(root element1 element2 ...)</pre>
<br>跟LISP的S-expression非常类似。
<br>
<br>于是执行测试程序。将要解析的代码保存到JerrySample.txt中，然后执行下面的命令：
<br><div class="quote_title">引用</div><div class="quote_div">java -cp ".;antlrworks-1.2.2.jar" TestJerry &lt; JerrySample.txt</div>
<br>得到输出：
<br><div class="dp-highlighter"><div class="bar"><div class="tools">Java代码 <embed src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/clipboard_new.swf" flashvars="clipboard=(VAR_DECL%20(SIMPLE_TYPE%20int)%20i%201)%20(VAR_DECL%20(SIMPLE_TYPE%20int)%20j)%20(VAR_DECL%20(SIMPLE_TYPE%20int)%20x%20(-%20(%2B%20(SIMPLE_VAR_ACCESS%20i)%20(*%202%203))%20(%2F%204%20(-%206%20(UNARY_MINUS%207)))))%20(VAR_DECL%20(ARRAY_TYPE%20int%202%203)%20array%20(ARRAY_LITERAL%20(ARRAY_LITERAL%200%201%202)%20(ARRAY_LITERAL%203%204%206)))%20(while%20(%3C%20(SIMPLE_VAR_ACCESS%20i)%2010)%20(%3D%20(SIMPLE_VAR_ACCESS%20i)%20(%2B%20(SIMPLE_VAR_ACCESS%20i)%201)))%20(while%20(%26%26%20(!%20(%3E%20(SIMPLE_VAR_ACCESS%20x)%200))%20(%3C%20(SIMPLE_VAR_ACCESS%20i)%2010))%20(BLOCK%20(%3D%20(SIMPLE_VAR_ACCESS%20x)%20(-%20(SIMPLE_VAR_ACCESS%20x)%201))%20(if%20(%3C%20(SIMPLE_VAR_ACCESS%20i)%205)%20break%20(read%20(SIMPLE_VAR_ACCESS%20i)))))%20(write%20(-%20(SIMPLE_VAR_ACCESS%20x)%20(SIMPLE_VAR_ACCESS%20j)))" quality="high" allowscriptaccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="15" width="14"></div></div><ol class="dp-j" start="1"><li><span><span>(VAR_DECL&nbsp;(SIMPLE_TYPE&nbsp;</span><span class="keyword">int</span><span>)&nbsp;i&nbsp;</span><span class="number">1</span><span>)&nbsp;(VAR_DECL&nbsp;(SIMPLE_TYPE&nbsp;</span><span class="keyword">int</span><span>)&nbsp;j)&nbsp;(VAR_DECL&nbsp;(SIMPLE_TYPE&nbsp;</span><span class="keyword">int</span><span>)&nbsp;x&nbsp;(-&nbsp;(+&nbsp;(SIMPLE_VAR_ACCESS&nbsp;i)&nbsp;(*&nbsp;</span><span class="number">2</span><span>&nbsp;</span><span class="number">3</span><span>))&nbsp;(/&nbsp;</span><span class="number">4</span><span>&nbsp;(-&nbsp;</span><span class="number">6</span><span>&nbsp;(UNARY_MINUS&nbsp;</span><span class="number">7</span><span>)))))&nbsp;(VAR_DECL&nbsp;(ARRAY_TYPE&nbsp;</span><span class="keyword">int</span><span>&nbsp;</span><span class="number">2</span><span>&nbsp;</span><span class="number">3</span><span>)&nbsp;array&nbsp;(ARRAY_LITERAL&nbsp;(ARRAY_LITERAL&nbsp;</span><span class="number">0</span><span>&nbsp;</span><span class="number">1</span><span>&nbsp;</span><span class="number">2</span><span>)&nbsp;(ARRAY_LITERAL&nbsp;</span><span class="number">3</span><span>&nbsp;</span><span class="number">4</span><span>&nbsp;</span><span class="number">6</span><span>)))&nbsp;(</span><span class="keyword">while</span><span>&nbsp;(&lt;&nbsp;(SIMPLE_VAR_ACCESS&nbsp;i)&nbsp;</span><span class="number">10</span><span>)&nbsp;(=&nbsp;(SIMPLE_VAR_ACCESS&nbsp;i)&nbsp;(+&nbsp;(SIMPLE_VAR_ACCESS&nbsp;i)&nbsp;</span><span class="number">1</span><span>)))&nbsp;(</span><span class="keyword">while</span><span>&nbsp;(&amp;&amp;&nbsp;(!&nbsp;(&gt;&nbsp;(SIMPLE_VAR_ACCESS&nbsp;x)&nbsp;</span><span class="number">0</span><span>))&nbsp;(&lt;&nbsp;(SIMPLE_VAR_ACCESS&nbsp;i)&nbsp;</span><span class="number">10</span><span>))&nbsp;(BLOCK&nbsp;(=&nbsp;(SIMPLE_VAR_ACCESS&nbsp;x)&nbsp;(-&nbsp;(SIMPLE_VAR_ACCESS&nbsp;x)&nbsp;</span><span class="number">1</span><span>))&nbsp;(</span><span class="keyword">if</span><span>&nbsp;(&lt;&nbsp;(SIMPLE_VAR_ACCESS&nbsp;i)&nbsp;</span><span class="number">5</span><span>)&nbsp;</span><span class="keyword">break</span><span>&nbsp;(read&nbsp;(SIMPLE_VAR_ACCESS&nbsp;i)))))&nbsp;(write&nbsp;(-&nbsp;(SIMPLE_VAR_ACCESS&nbsp;x)&nbsp;(SIMPLE_VAR_ACCESS&nbsp;j)))&nbsp;&nbsp;</span></span></li></ol></div><pre style="display: none;" name="code" class="java">(VAR_DECL (SIMPLE_TYPE int) i 1) (VAR_DECL (SIMPLE_TYPE int) j) (VAR_DECL (SIMPLE_TYPE int) x (- (+ (SIMPLE_VAR_ACCESS i) (* 2 3)) (/ 4 (- 6 (UNARY_MINUS 7))))) (VAR_DECL (ARRAY_TYPE int 2 3) array (ARRAY_LITERAL (ARRAY_LITERAL 0 1 2) (ARRAY_LITERAL 3 4 6))) (while (&lt; (SIMPLE_VAR_ACCESS i) 10) (= (SIMPLE_VAR_ACCESS i) (+ (SIMPLE_VAR_ACCESS i) 1))) (while (&amp;&amp; (! (&gt; (SIMPLE_VAR_ACCESS x) 0)) (&lt; (SIMPLE_VAR_ACCESS i) 10)) (BLOCK (= (SIMPLE_VAR_ACCESS x) (- (SIMPLE_VAR_ACCESS x) 1)) (if (&lt; (SIMPLE_VAR_ACCESS i) 5) break (read (SIMPLE_VAR_ACCESS i))))) (write (- (SIMPLE_VAR_ACCESS x) (SIMPLE_VAR_ACCESS j)))</pre>
<br>这样太乱了看不清楚。将其格式稍微整理一下得到：
<br><div class="dp-highlighter"><div class="bar"><div class="tools">Java代码 <embed src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/clipboard_new.swf" flashvars="clipboard=(VAR_DECL%0A%20%20(SIMPLE_TYPE%20int)%0A%20%20i%0A%20%201%0A)%0A(VAR_DECL%0A%20%20(SIMPLE_TYPE%20int)%0A%20%20j%0A)%0A(VAR_DECL%0A%20%20(SIMPLE_TYPE%20int)%0A%20%20x%0A%20%20(-%0A%20%20%20%20(%2B%20(SIMPLE_VAR_ACCESS%20i)%20(*%202%203))%0A%20%20%20%20(%2F%204%20(-%206%20(UNARY_MINUS%207)))%0A%20%20)%0A)%0A(VAR_DECL%0A%20%20(ARRAY_TYPE%0A%20%20%20%20int%0A%20%20%20%202%0A%20%20%20%203%0A%20%20)%0A%20%20array%0A%20%20(ARRAY_LITERAL%0A%20%20%20%20(ARRAY_LITERAL%200%201%202)%0A%20%20%20%20(ARRAY_LITERAL%203%204%206)%0A%20%20)%0A)%0A%0A(while%0A%20%20(%3C%20(SIMPLE_VAR_ACCESS%20i)%2010)%0A%20%20(%3D%20(SIMPLE_VAR_ACCESS%20i)%20(%2B%20(SIMPLE_VAR_ACCESS%20i)%201))%0A)%0A(while%0A%20%20(%26%26%0A%20%20%20%20(!%20(%3E%20(SIMPLE_VAR_ACCESS%20x)%200))%0A%20%20%20%20(%3C%20(SIMPLE_VAR_ACCESS%20i)%2010)%0A%20%20)%0A%20%20(BLOCK%0A%20%20%20%20(%3D%20(SIMPLE_VAR_ACCESS%20x)%20(-%20(SIMPLE_VAR_ACCESS%20x)%201))%0A%20%20%20%20(if%0A%20%20%20%20%20%20(%3C%20(SIMPLE_VAR_ACCESS%20i)%205)%0A%20%20%20%20%20%20break%0A%20%20%20%20%20%20(read%20(SIMPLE_VAR_ACCESS%20i))%0A%20%20%20%20)%0A%20%20)%0A)%0A(write%0A%20%20(-%20(SIMPLE_VAR_ACCESS%20x)%20(SIMPLE_VAR_ACCESS%20j)))" quality="high" allowscriptaccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="15" width="14"></div></div><ol class="dp-j" start="1"><li><span><span>(VAR_DECL&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;(SIMPLE_TYPE&nbsp;<span class="keyword">int</span><span>)&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;i&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;<span class="number">1</span><span>&nbsp;&nbsp;</span></span></li><li><span>)&nbsp;&nbsp;</span></li><li><span>(VAR_DECL&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;(SIMPLE_TYPE&nbsp;<span class="keyword">int</span><span>)&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;j&nbsp;&nbsp;</span></li><li><span>)&nbsp;&nbsp;</span></li><li><span>(VAR_DECL&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;(SIMPLE_TYPE&nbsp;<span class="keyword">int</span><span>)&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;x&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;(-&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;(+&nbsp;(SIMPLE_VAR_ACCESS&nbsp;i)&nbsp;(*&nbsp;<span class="number">2</span><span>&nbsp;</span><span class="number">3</span><span>))&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;(/&nbsp;<span class="number">4</span><span>&nbsp;(-&nbsp;</span><span class="number">6</span><span>&nbsp;(UNARY_MINUS&nbsp;</span><span class="number">7</span><span>)))&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;)&nbsp;&nbsp;</span></li><li><span>)&nbsp;&nbsp;</span></li><li><span>(VAR_DECL&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;(ARRAY_TYPE&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">int</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="number">2</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="number">3</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;array&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;(ARRAY_LITERAL&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;(ARRAY_LITERAL&nbsp;<span class="number">0</span><span>&nbsp;</span><span class="number">1</span><span>&nbsp;</span><span class="number">2</span><span>)&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;(ARRAY_LITERAL&nbsp;<span class="number">3</span><span>&nbsp;</span><span class="number">4</span><span>&nbsp;</span><span class="number">6</span><span>)&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;)&nbsp;&nbsp;</span></li><li><span>)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;</span></li><li><span>(<span class="keyword">while</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;(&lt;&nbsp;(SIMPLE_VAR_ACCESS&nbsp;i)&nbsp;<span class="number">10</span><span>)&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;(=&nbsp;(SIMPLE_VAR_ACCESS&nbsp;i)&nbsp;(+&nbsp;(SIMPLE_VAR_ACCESS&nbsp;i)&nbsp;<span class="number">1</span><span>))&nbsp;&nbsp;</span></span></li><li><span>)&nbsp;&nbsp;</span></li><li><span>(<span class="keyword">while</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;(&amp;&amp;&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;(!&nbsp;(&gt;&nbsp;(SIMPLE_VAR_ACCESS&nbsp;x)&nbsp;<span class="number">0</span><span>))&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;(&lt;&nbsp;(SIMPLE_VAR_ACCESS&nbsp;i)&nbsp;<span class="number">10</span><span>)&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;(BLOCK&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;(=&nbsp;(SIMPLE_VAR_ACCESS&nbsp;x)&nbsp;(-&nbsp;(SIMPLE_VAR_ACCESS&nbsp;x)&nbsp;<span class="number">1</span><span>))&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;(<span class="keyword">if</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&lt;&nbsp;(SIMPLE_VAR_ACCESS&nbsp;i)&nbsp;<span class="number">5</span><span>)&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>&nbsp;&nbsp;</span></span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(read&nbsp;(SIMPLE_VAR_ACCESS&nbsp;i))&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;)&nbsp;&nbsp;</span></li><li><span>)&nbsp;&nbsp;</span></li><li><span>(write&nbsp;&nbsp;</span></li><li><span>&nbsp;&nbsp;(-&nbsp;(SIMPLE_VAR_ACCESS&nbsp;x)&nbsp;(SIMPLE_VAR_ACCESS&nbsp;j)))&nbsp;&nbsp;</span></li></ol></div><pre style="display: none;" name="code" class="java">(VAR_DECL
  (SIMPLE_TYPE int)
  i
  1
)
(VAR_DECL
  (SIMPLE_TYPE int)
  j
)
(VAR_DECL
  (SIMPLE_TYPE int)
  x
  (-
    (+ (SIMPLE_VAR_ACCESS i) (* 2 3))
    (/ 4 (- 6 (UNARY_MINUS 7)))
  )
)
(VAR_DECL
  (ARRAY_TYPE
    int
    2
    3
  )
  array
  (ARRAY_LITERAL
    (ARRAY_LITERAL 0 1 2)
    (ARRAY_LITERAL 3 4 6)
  )
)

(while
  (&lt; (SIMPLE_VAR_ACCESS i) 10)
  (= (SIMPLE_VAR_ACCESS i) (+ (SIMPLE_VAR_ACCESS i) 1))
)
(while
  (&amp;&amp;
    (! (&gt; (SIMPLE_VAR_ACCESS x) 0))
    (&lt; (SIMPLE_VAR_ACCESS i) 10)
  )
  (BLOCK
    (= (SIMPLE_VAR_ACCESS x) (- (SIMPLE_VAR_ACCESS x) 1))
    (if
      (&lt; (SIMPLE_VAR_ACCESS i) 5)
      break
      (read (SIMPLE_VAR_ACCESS i))
    )
  )
)
(write
  (- (SIMPLE_VAR_ACCESS x) (SIMPLE_VAR_ACCESS j)))</pre>
<br>可以跟原本的代码对比一下，看看是否保持了原本的结构。
<br>
<br>得到这棵抽象语法树之后，接下来就可以对树来做匹配和分析了。由于树本身已经有了结构，下面就可以用更干净的描述方式来表述我们要对树做的处理。下一篇就来看看ANTLR的tree grammar在这里的应用。
  </div>

  <div>
<script type="text/javascript">
google_ad_client = "pub-9971846879634397";
google_ad_slot = "8644581328";
google_ad_width = 468;
google_ad_height = 60;
</script>
<script type="text/javascript" src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/show_ads.js">
</script><script src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/expansion_embed.js"></script><script src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/test_domain.js"></script><script>google_protectAndRun("ads_core.google_render_ad", google_handleError, google_render_ad);</script><ins style="border: medium none ; margin: 0pt; padding: 0pt; display: inline-table; height: 60px; position: relative; visibility: visible; width: 468px;"><ins style="border: medium none ; margin: 0pt; padding: 0pt; display: block; height: 60px; position: relative; visibility: visible; width: 468px;"><iframe allowtransparency="true" hspace="0" id="google_ads_frame1" marginheight="0" marginwidth="0" name="google_ads_frame" src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/ads.htm" style="left: 0pt; position: absolute; top: 0pt;" vspace="0" scrolling="no" frameborder="0" height="60" width="468"></iframe></ins></ins>
</div>

  <div id="digg_bottom" class="clearfix"><a href="#" onclick='digg("blogs", 314507, false);return false;'><div><strong>5</strong> <br>顶</div></a><a href="#" onclick='digg("blogs", 314507, true);return false;'><div><strong>0</strong> <br>踩</div></a></div>
  
  
  
  <div class="attachments">
    
      
        <ul>
          <li><a href="http://rednaxelafx.javaeye.com/topics/download/ae9a2409-6d35-34cf-8cbc-742c0d36e93f">TestJerry_2.zip</a> (2 MB)</li>
          
          <li>下载次数: 15</li>
        </ul>
      
    
    
  </div>

    
  <div class="blog_bottom">
    <ul>
      <li>23:30</li>
      <li>浏览 (405)</li>
            <li><a href="#comments">评论</a> (0)</li>
      <li>分类: <a href="http://rednaxelafx.javaeye.com/category/29010">Compiler</a></li>
      
      
        <li><a href="http://app.javaeye.com/links?user_favorite%5Btitle%5D=%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99&amp;user_favorite%5Burl%5D=http%3A%2F%2Frednaxelafx.javaeye.com%2Fblog%2F314507" target="_blank" class="favorite">收藏</a></li>
        
      
      
      <li class="last"><a href="http://www.javaeye.com/wiki/topic/314507" target="_blank" class="more">相关推荐</a></li>
    </ul>
  </div>

  <div class="blog_comment">
    <h5>评论</h5>
    <a id="comments" name="comments"></a>
    
    
    
  </div>

  <div class="blog_comment">
    <h5>发表评论</h5>
          
      
        <a href="http://rednaxelafx.javaeye.com/index/forum_certify" target="_blank">完成论坛规则小测验以后，您才能在论坛发帖和回复。</a>
      
      </div>
</div>


<script type="text/javascript">
  dp.SyntaxHighlighter.HighlightAll('code', true, true);

  fix_image_size($$('div.blog_content img'), 700);
  function quote_comment(id) {
    new Ajax.Request('/editor/quote', {
      parameters: {'id':id, 'type':'Post'},
      onSuccess:function(response){editor.bbcode_editor.textarea.insertAfterSelection(response.responseText);}
    });
  }
</script>


        </div>

        <div id="local">
          <div class="local_top"></div>
          <div id="blog_owner">
            <div id="blog_owner_logo"><a href="http://rednaxelafx.javaeye.com/"><img alt="RednaxelaFX的博客" class="logo" src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/426915a9-3884-39df-b1d4-20a8c5b00908.png" title="RednaxelaFX的博客: Script Ahead, Code Behind"></a></div>
            <div id="blog_owner_name">RednaxelaFX</div>
          </div>
          
            <div id="twitter_decorate">&nbsp;</div>
            <div id="twitter" class="twitter clearfix">
              
@<a href="http://night-stalker.javaeye.com/" target="_blank">night_stalker</a> 让我想起这篇：<a href="http://blogs.msdn.com/oldnewthing/archive/2009/07/24/9846948.aspx">http://blogs.msdn.com/oldnewthing/archive/2009/07/24/9846948.aspx</a> &lt;&lt; Raymond说嫌某种语言缺乏某种设施的话，自己写个预处理器就能解决了 = = snippet同理
<br><em><a href="http://rednaxelafx.javaeye.com/blog/chat/37749">2009-08-03</a>
 通过网页
 
</em>
       <a href="http://app.javaeye.com/chat?twitter%5Bbody%5D=%40RednaxelaFX+&amp;twitter%5Breply_to_id%5D=37749" title="回复这个闲聊"><img alt="Reply_twitter" src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/reply_twitter.gif"></a>
              <div class="right"><a href="http://rednaxelafx.javaeye.com/blog/chat">&gt;&gt;更多闲聊</a></div>
            </div>
          
          <div id="blog_actions">
            <ul>
              <li>浏览: 144782 次</li>
              <li>性别: <img alt="Icon_minigender_1" src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/icon_minigender_1.gif" title="男"></li>
              <li>来自: 广州</li>
              <li><img src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/offline.gif"></li>
              <li>
                <a href="http://rednaxelafx.javaeye.com/blog/profile" class="profile">详细资料</a>
                <a href="http://rednaxelafx.javaeye.com/blog/guest_book" class="guest_book">留言簿</a>
              </li>
              
                <li>
                  <a href="http://app.javaeye.com/messages/new?message%5Breceiver_name%5D=RednaxelaFX" class="message" title="发送站内短信">发短消息</a>
                  
                    <a href="http://app.javaeye.com/feed?subscription%5Bsubscribed_user_name%5D=RednaxelaFX" class="subscription" onclick="var f = document.createElement('form'); f.style.display = 'none'; this.parentNode.appendChild(f); f.method = 'POST'; f.action = this.href;f.submit();return false;">订阅</a>
                  
                </li>
              
            </ul>
            <h5>搜索本博客</h5>
            <form action="/blog/search" method="get">              <input class="text" id="query" name="query" style="margin-left: 10px; width: 110px;" type="text">
              <input class="submit" value="搜索" type="submit">
            </form>          </div>
          
            <div id="user_visits" class="clearfix">
              <h5>最近访客 <span style="font-weight: normal; font-size: 12px; padding-left: 30px;"><a href="http://rednaxelafx.javaeye.com/blog/user_visits">&gt;&gt;更多访客</a></span></h5>
              
                <div class="user_visit">
                  <div class="logo"><a href="http://cnshirui.javaeye.com/" target="_blank"><img alt="cnshirui的博客" class="logo" src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/user-logo-thumb.gif" title="cnshirui的博客: "></a></div>
                  <div class="left"><a href="http://cnshirui.javaeye.com/" target="_blank">cnshirui</a></div>
                </div>
              
                <div class="user_visit">
                  <div class="logo"><a href="http://eolanda.javaeye.com/" target="_blank"><img alt="eolanda的博客" class="logo" src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/user-logo-thumb.gif" title="eolanda的博客: "></a></div>
                  <div class="left"><a href="http://eolanda.javaeye.com/" target="_blank">eolanda</a></div>
                </div>
              
                <div class="user_visit">
                  <div class="logo"><a href="http://abruzzi.javaeye.com/" target="_blank"><img alt="abruzzi的博客" class="logo" src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/42d7e92e-d844-325c-8898-23bcf85c3b24-thumb.jpg" title="abruzzi的博客: 横行青海夜带刀"></a></div>
                  <div class="left"><a href="http://abruzzi.javaeye.com/" target="_blank">abruzzi</a></div>
                </div>
              
                <div class="user_visit">
                  <div class="logo"><a href="http://bukkake.javaeye.com/" target="_blank"><img alt="bukkake的博客" class="logo" src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/user-logo-thumb.gif" title="bukkake的博客: "></a></div>
                  <div class="left"><a href="http://bukkake.javaeye.com/" target="_blank">bukkake</a></div>
                </div>
              
            </div>
          
                      <div id="blog_menu">
              <h5>博客分类</h5>
              <ul>
                <li><a href="http://rednaxelafx.javaeye.com/">全部博客 (295)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/21342">Programming Languages (17)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/29044">Ruby (20)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/21339">C# (30)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/31968">DLR (19)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/51666">F# (3)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/43041">Python (4)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/27795">Scheme (1)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/58920">Haskell (0)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/28215">Regular Expression (4)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/29010">Compiler (11)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/26952">ECMAScript (2)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/22618">JavaScript (14)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/22068">ActionScript (7)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/27153">Squirrel (2)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/36305">C (4)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/22307">C++ (8)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/21340">D (2)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/61298">Virtual Machine (5)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/66462">.NET (6)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/33627">SSCLI Rotor (1)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/22617">Java (11)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/60345">Harmony (0)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/27144">Data Structure and Algorithm (2)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/21352">Optimization (5)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/34556">Books (1)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/52245">WPF (1)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/24366">Game Engines (7)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/22003">吉里吉里 (11)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/23065">UML (1)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/22696">NSIS (4)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/24338">Reverse Engineering (9)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/24088">Utilities (2)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/29744">Design Patterns (1)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/25057">Visual Studio (8)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/54389">Windows 7 (3)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/25305">School Assignment / Test (6)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/22830">Android (2)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/73928">x86 Assembler (0)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/24349">Anti-virus (1)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/27193">REST (1)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/28651">Profiling (1)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/23669">misc (26)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/23661">NetOA (12)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/27815">rant (3)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/65667">anime (1)</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/category/28622">Links (11)</a></li>
                
              </ul>
            </div>
            
              <div id="blog_album">
                <h5>我的相册</h5>
                <div class="picture_thumb" style="float: none;">
                  <div><span class="thumb_box"><a href="http://rednaxelafx.javaeye.com/album"><img alt="A8df83e2-c911-3d18-aef6-a58412fbefe2-thumb" src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/a8df83e2-c911-3d18-aef6-a58412fbefe2-thumb.jpg"></a></span></div>
                  <span>YARV2005.JPG<br> <a href="http://rednaxelafx.javaeye.com/album">共 90 张</a></span>
                </div>
              </div>
            
            
              <div id="guest_books">
                <h5>我的留言簿 <span style="font-weight: normal; font-size: 12px; padding-left: 20px;"><a href="http://rednaxelafx.javaeye.com/blog/guest_book">&gt;&gt;更多留言</a></span></h5>
                <ul>
                  
                    <li>
                      我来看萌萌的头像拉<br>
                      -- by <a href="http://rednaxelafx.javaeye.com/blog/guest_book#7607">iaimstar</a>
                    </li>
                  
                    <li>
                      &nbsp;&nbsp;  你好，我的那个循环计数器的问题，你的方法我没试过，但觉得可行，而且符合我的 ...<br>
                      -- by <a href="http://rednaxelafx.javaeye.com/blog/guest_book#7284">zyl小星星</a>
                    </li>
                  
                    <li>
                       你好阳光阿<br>
                      -- by <a href="http://rednaxelafx.javaeye.com/blog/guest_book#7173">wellee</a>
                    </li>
                  
                </ul>
              </div>
            
            <div id="blog_others">
              <h5>其他分类</h5>
              <ul>
                <li><a href="http://rednaxelafx.javaeye.com/blog/favorite">我的收藏</a> (495)</li>
                                                <li><a href="http://rednaxelafx.javaeye.com/blog/forum">我的论坛帖子</a> (237)</li>
                <li><a href="http://rednaxelafx.javaeye.com/blog/article">我的精华良好贴</a> (2)</li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/blog/solution">我解决的问题</a> (120) </li>
                              </ul>
            </div>
            
            <div id="recent_groups">
              <h5>最近加入圈子</h5>
              <ul>
                
                  <li><a href="http://mars.group.javaeye.com/">火星常驻JE办事处</a></li>
                
                  <li><a href="http://android.group.javaeye.com/">Android</a></li>
                
                  <li><a href="http://sevenofnine.group.javaeye.com/">7/9</a></li>
                
                  <li><a href="http://fsharp.group.javaeye.com/">F#语言</a></li>
                
                  <li><a href="http://thinkinginruby.group.javaeye.com/">Thinking In Ruby</a></li>
                
              </ul>
            </div>
            
              <div id="user_links">
                <h5>链接</h5>
                <ul>
                  
                    <li><a href="http://flashgameu.com/" target="_blank">Flash Game University</a></li>
                  
                    <li><a href="http://digitalmars.com/d/index.html" target="_blank">Digital Mars D</a></li>
                  
                    <li><a href="http://ruriko.denpa.org/" target="_blank">[電波とどいた？]</a></li>
                  
                    <li><a href="http://kikyou.info/tvp/" target="_blank">吉里吉里</a></li>
                  
                    <li><a href="http://www.nscripter.com/" target="_blank">NScripter</a></li>
                  
                    <li><a href="http://www.retouch.info/retouch/index.html" target="_blank">retouch tools</a></li>
                  
                    <li><a href="http://yanesdkdotnet.sourceforge.jp/" target="_blank">YaneuraoGameSDK.NET</a></li>
                  
                    <li><a href="http://yu-ris.net/" target="_blank">YU-RIS</a></li>
                  
                    <li><a href="http://dead-code.org/" target="_blank">Wintermute Engine</a></li>
                  
                    <li><a href="http://page.freett.com/yuukiex/yuukinovel.html" target="_blank">Yuuki! Novel</a></li>
                  
                    <li><a href="http://www.iwebthereforeiam.com/projects/NullScript.asp" target="_blank">NullScript</a></li>
                  
                    <li><a href="http://blogs.msdn.com/ericlippert/archive/tags/SimpleScript/default.aspx" target="_blank">SimpleScript</a></li>
                  
                    <li><a href="http://www.codeplex.com/scriptdotnet" target="_blank">Script.NET</a></li>
                  
                    <li><a href="http://www.livemaker.net/" target="_blank">LiveMaker</a></li>
                  
                    <li><a href="http://luna.sumomo.ne.jp/" target="_blank">Luna for DirectX 9.0c</a></li>
                  
                    <li><a href="http://www.greenwood.co.jp/%7Ek-aki/" target="_blank">ロジカルめがね</a></li>
                  
                    <li><a href="http://x10.sourceforge.net/x10home.shtml" target="_blank">The X10 Programming Language</a></li>
                  
                    <li><a href="http://www.iolanguage.com/" target="_blank">io</a></li>
                  
                    <li><a href="http://www.sfml-dev.org/" target="_blank">SFML</a></li>
                  
                    <li><a href="http://research.sun.com/projects/lively/" target="_blank">Sun Labs Lively Kernel</a></li>
                  
                    <li><a href="http://research.microsoft.com/Phoenix/" target="_blank">Phoenix</a></li>
                  
                    <li><a href="http://blogs.tedneward.com/" target="_blank">The Blog Ride</a></li>
                  
                    <li><a href="http://blog.livedoor.jp/kushie/" target="_blank">でふぉると 第４版</a></li>
                  
                    <li><a href="http://msdn.microsoft.com/en-us/magazine/default.aspx" target="_blank">MSDN Magazine</a></li>
                  
                    <li><a href="http://www.gnu.org/software/gnash/" target="_blank">Gnash</a></li>
                  
                    <li><a href="http://boo.codehaus.org/" target="_blank">Boo</a></li>
                  
                    <li><a href="http://www.smallscript.org/" target="_blank">S#.AOS</a></li>
                  
                    <li><a href="http://blogs.msdn.com/ericlippert/default.aspx" target="_blank">Fabulous Adventures In Coding</a></li>
                  
                    <li><a href="http://www.strongtalk.org/" target="_blank">Strongtalk</a></li>
                  
                    <li><a href="http://ruby-dbi.rubyforge.org/" target="_blank">Ruby/DBI</a></li>
                  
                    <li><a href="http://www.menees.com/SharpScript.htm" target="_blank">SharpScript</a></li>
                  
                    <li><a href="http://code.google.com/p/ironclad/" target="_blank">IronClad</a></li>
                  
                    <li><a href="http://msdn.microsoft.com/en-gb/fsharp/default.aspx" target="_blank">F# Developer Center</a></li>
                  
                    <li><a href="http://www.albahari.com/nutshell/linqkit.html" target="_blank">LINQKit</a></li>
                  
                    <li><a href="http://research.microsoft.com/%7Embarnett/ILMerge.aspx" target="_blank">ILMerge</a></li>
                  
                    <li><a href="http://code.google.com/chromium/" target="_blank">Chromium</a></li>
                  
                    <li><a href="http://code.google.com/p/v8/" target="_blank">V8</a></li>
                  
                    <li><a href="http://code.google.com/p/babelobfuscator/" target="_blank">Babel</a></li>
                  
                    <li><a href="http://www.parallelcsharp.com/" target="_blank">Parallel C#</a></li>
                  
                    <li><a href="http://www.convertico.com/" target="_blank">ConvertICO</a></li>
                  
                    <li><a href="http://ayende.com/projects/rhino-mocks.aspx" target="_blank">Rhino.Mocks</a></li>
                  
                    <li><a href="http://stackoverflow.com/" target="_blank">Stack OVerflow</a></li>
                  
                    <li><a href="http://www.mathway.com/" target="_blank">Mathway</a></li>
                  
                    <li><a href="http://www.reverberate.org/gazelle/" target="_blank">Gazelle</a></li>
                  
                    <li><a href="http://sourceforge.net/projects/brahma-fx" target="_blank">Brahma</a></li>
                  
                    <li><a href="http://sharpsvn.open.collab.net/" target="_blank">SharpSVN</a></li>
                  
                    <li><a href="http://codeplex.com/dynamicgeometry" target="_blank">Live Geometry</a></li>
                  
                    <li><a href="http://cobra-language.com/" target="_blank">The Cobra Programming Language</a></li>
                  
                    <li><a href="http://www.seven-g.com/" target="_blank">Seven-G</a></li>
                  
                    <li><a href="http://www.flightgear.org/" target="_blank">FlightGear</a></li>
                  
                    <li><a href="http://code.google.com/p/silvershell/" target="_blank">silvershell</a></li>
                  
                    <li><a href="http://www.janetdev.org/" target="_blank">Ja.NET</a></li>
                  
                    <li><a href="http://www.softwarepreservation.org/" target="_blank">Software Presentation Group</a></li>
                  
                    <li><a href="http://mvel.codehaus.org/" target="_blank">MVEL</a></li>
                  
                    <li><a href="http://plugins.jquery.com/project/jLINQ" target="_blank">jLINQ</a></li>
                  
                    <li><a href="http://www.codeplex.com/jsinq" target="_blank">JSINQ</a></li>
                  
                    <li><a href="http://calculist.blogspot.com/" target="_blank">The Little Calculist</a></li>
                  
                    <li><a href="http://www.ocaml-tutorial.org/" target="_blank">OCaml tutorial</a></li>
                  
                    <li><a href="http://www.bestechvideos.com/" target="_blank">Best Tech Videos</a></li>
                  
                    <li><a href="http://ps2pdf.com/convert.cgi" target="_blank">PS2PDF</a></li>
                  
                    <li><a href="http://the-free-meme.blogspot.com/" target="_blank">Programming and Debugging (in my Underhøøsen) </a></li>
                  
                    <li><a href="http://ioke.org/" target="_blank">Ioke</a></li>
                  
                    <li><a href="http://www.opendylan.org/" target="_blank">Dylan</a></li>
                  
                    <li><a href="http://projects.nikhilk.net/ScriptSharp" target="_blank">Script#</a></li>
                  
                    <li><a href="http://factorcode.org/" target="_blank">Factor</a></li>
                  
                    <li><a href="http://www.cogmation.com/" target="_blank">Cogmation Robotics</a></li>
                  
                    <li><a href="http://pygments.org/" target="_blank">Pygments</a></li>
                  
                    <li><a href="http://nestedvm.ibex.org/" target="_blank">NestedVM</a></li>
                  
                    <li><a href="http://blogs.msdn.com/hermanventer/" target="_blank">Herman Venter, programming language enthusiast</a></li>
                  
                    <li><a href="http://nekovm.org/" target="_blank">Neko/NekoVM</a></li>
                  
                    <li><a href="http://rubyquiz.com/" target="_blank">Ruby Quiz</a></li>
                  
                    <li><a href="http://www.ccs.neu.edu/home/samth/typed-scheme/" target="_blank">Typed Scheme</a></li>
                  
                    <li><a href="http://www.delorie.com/djgpp/compile/" target="_blank">DJGPP Public Access Cross-Compiler</a></li>
                  
                    <li><a href="http://monoruntime.wordpress.com/" target="_blank">Mono Runtime Notes</a></li>
                  
                    <li><a href="http://www.pythonchallenge.com/" target="_blank">Python Challenge</a></li>
                  
                    <li><a href="http://channel9.msdn.com/pdc2008/" target="_blank">PDC 2008 | Channel 9</a></li>
                  
                    <li><a href="http://www.starruby.info/ja/" target="_blank">Star Ruby</a></li>
                  
                    <li><a href="http://www.chrisseaton.com/katahdin/" target="_blank">Katahdin</a></li>
                  
                    <li><a href="http://newspeaklanguage.org/" target="_blank">Newspeak</a></li>
                  
                    <li><a href="http://bling.codeplex.com/" target="_blank">Bling DSL for C#/WPF</a></li>
                  
                    <li><a href="http://www.memorymanagement.org/" target="_blank">The Memory Management Reference</a></li>
                  
                    <li><a href="http://www.openjit.org/" target="_blank">OpenJIT</a></li>
                  
                </ul>
              </div>
            
            
                          <div id="month_blogs">
                <h5>存档</h5>
                <ul>
                  
                    <li><a href="http://rednaxelafx.javaeye.com/blog/monthblog/2009-08">2009-08</a> (1)</li>
                  
                    <li><a href="http://rednaxelafx.javaeye.com/blog/monthblog/2009-07">2009-07</a> (9)</li>
                  
                    <li><a href="http://rednaxelafx.javaeye.com/blog/monthblog/2009-06">2009-06</a> (7)</li>
                  
                  <li><a href="http://rednaxelafx.javaeye.com/blog/monthblog_more">更多存档...</a></li>
                </ul>
              </div>
                        <div id="recent_comments">
              <h5>最新评论</h5>
              <ul>
                
                  <li>
                    <a href="http://rednaxelafx.javaeye.com/blog/437720#comments" title="基情约会……">基情约会……</a><br>
                    glacjay 写道吹水用纸反白太历害。
语言实现你有实现了什么东西没，可否拿出来 ...<br>
                    -- by <a href="http://rednaxelafx.javaeye.com/" target="_blank">RednaxelaFX</a>
                  </li>
                
                  <li>
                    <a href="http://rednaxelafx.javaeye.com/blog/437720#comments" title="基情约会……">基情约会……</a><br>
                    吹水用纸反白太历害。语言实现你有实现了什么东西没，可否拿出来供俺们瞻仰瞻仰？另，J ...<br>
                    -- by <a href="http://glacjay.javaeye.com/" target="_blank">glacjay</a>
                  </li>
                
                  <li>
                    <a href="http://rednaxelafx.javaeye.com/blog/437720#comments" title="基情约会……">基情约会……</a><br>
                    量产型人型自走炮 写道那啥..晚上又被同学拖去打保龄到现在..鹿过一下
呃呵呵，深 ...<br>
                    -- by <a href="http://rednaxelafx.javaeye.com/" target="_blank">RednaxelaFX</a>
                  </li>
                
                  <li>
                    <a href="http://rednaxelafx.javaeye.com/blog/437720#comments" title="基情约会……">基情约会……</a><br>
                    那啥..晚上又被同学拖去打保龄到现在..鹿过一下<br>
                    -- by <a href="http://imoutocon.javaeye.com/" target="_blank">量产型人型自走炮</a>
                  </li>
                
                  <li>
                    <a href="http://rednaxelafx.javaeye.com/blog/437720#comments" title="基情约会……">基情约会……</a><br>
                    我基本上是坚持不卖书的……不过这次从学校搬东西回家还是顶不住重负卖掉了一些模型杂志 ...<br>
                    -- by <a href="http://rednaxelafx.javaeye.com/" target="_blank">RednaxelaFX</a>
                  </li>
                
              </ul>
            </div>
            <div id="comments_top">
              <h5>评论排行榜</h5>
              <ul>
                
                  <li><a href="http://rednaxelafx.javaeye.com/blog/391598" title="Visual Studio 2010 Beta 1的安装和初试（截图×20）">Visual Studio 2010 Beta 1的安装和初试（ ...</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/blog/344763" title="YARV和JIT，还有JRuby……">YARV和JIT，还有JRuby……</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/blog/388294" title="用Iron-*语言来探索.NET">用Iron-*语言来探索.NET</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/blog/428278" title="去Sun开发者技术日2009逛了">去Sun开发者技术日2009逛了</a></li>
                
                  <li><a href="http://rednaxelafx.javaeye.com/blog/396268" title="一个新的电子小说制作引擎，「らのべえ」">一个新的电子小说制作引擎，「らのべえ」</a></li>
                
              </ul>
            </div>
            <div id="rss">
              <ul>
                <li><a href="http://rednaxelafx.javaeye.com/rss" target="_blank"><img alt="Rss" src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/rss.png"></a></li>
                <li><a href="http://fusion.google.com/add?feedurl=http://rednaxelafx.javaeye.com/rss" target="_blank"><img alt="Rss_google" src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/rss_google.gif"></a></li>
                <li><a href="http://www.zhuaxia.com/add_channel.php?url=http://rednaxelafx.javaeye.com/rss" target="_blank"><img alt="Rss_zhuaxia" src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/rss_zhuaxia.gif"></a></li>
                <li><a href="http://www.xianguo.com/subscribe.php?url=http://rednaxelafx.javaeye.com/rss" target="_blank"><img alt="Rss_xianguo" src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/rss_xianguo.jpg"></a></li>
                <li><a href="http://www.google.com/search?hl=zh-CN&amp;q=RSS">[什么是RSS?]</a></li>
              </ul>
            </div>
            <div class="local_bottom"></div>
          
        </div>
      </div>

      <div id="footer" class="clearfix">
        <div id="copyright">
          <hr>
          声明：JavaEye文章版权属于作者，受法律保护。没有作者书面许可不得转载。若作者同意转载，必须以超链接形式标明文章原始出处和作者。<br>
          © 2003-2009 JavaEye.com.   All rights reserved. 上海炯耐计算机软件有限公司 [ 沪ICP备05023328号 ]
        </div>
      </div>
    </div>
    
  <div id="chat_input" style="display: none;">
    <iframe id="chat_iframe" marginwidth="0" marginheight="0" allowtransparency="true" scrolling="no" frameborder="0"></iframe>
  </div>
  <div id="chat_button"><a href="#" style="text-decoration: none; color: black;" onclick="$('chat_input').show();$('chat_iframe').src='/chat/widget';return false;">说点啥吧 <img alt="Chat" src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/chat.gif"></a></div>

<script type="text/javascript">
  document.write("<img src='http://stat.javaeye.com/?url="+ encodeURIComponent(document.location.href) + "&referrer=" + encodeURIComponent(document.referrer) + "&logged_in=yes" + "' width='0' height='0' />");
</script><img src="%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AANTLR%E7%9A%84%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99_files/a.gif" height="0" width="0">
    
  </body></html>